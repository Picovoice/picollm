export declare const getPicollmAttentionWasmFunctions: (memory: WebAssembly.Memory) => {
    pv_picollm_attention_precompute_encoding_web_worker_wasm: (objAddress: number, encodingAddress: number, dimension: number, steps: number, theta: number, statusAddress: number) => Promise<void>;
    pv_picollm_attention_encode_web_worker_wasm: (objAddress: number, xAddress: number, newEncodingAddress: number, n: number, numHeads: number, ropeInterleaved: number, headDimension: number, ropeDimension: number, position: number, statusAddress: number) => Promise<void>;
    pv_picollm_attention_attend_web_worker_wasm: (objAddress: number, numHeads: number, numKvHeads: number, windowLength: number, headDimension: number, keysAddress: number, keyInterceptsAddress: number, keySlopesAddress: number, valuesAddress: number, valueInterceptsAddress: number, valueSlopesAddress: number, position: number, queryAddress: number, n: number, outputAddress: number, statusAddress: number) => Promise<void>;
    pv_picollm_attention_update_keys_web_worker_wasm: (objAddress: number, numKvHeads: number, windowLength: number, headDimension: number, keysAddress: number, keyInterceptsAddress: number, keySlopesAddress: number, position: number, n: number, tfAddress: number, statusAddress: number) => Promise<void>;
    pv_picollm_attention_update_values_web_worker_wasm: (objAddress: number, numKvHeads: number, windowLength: number, headDimension: number, valuesAddress: number, valueInterceptsAddress: number, valueSlopesAddress: number, position: number, n: number, tfAddress: number, statusAddress: number) => Promise<void>;
    pv_picollm_attention_transpose_query_web_worker_wasm: (objAddress: number, n: number, tfAddress: number, hfAddress: number, numHeads: number, headDimension: number, statusAddress: number) => Promise<void>;
};
//# sourceMappingURL=pv_picollm_attention.d.ts.map