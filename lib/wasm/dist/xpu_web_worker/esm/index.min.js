function I(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}function g(g,C){if(g){if("string"==typeof g)return I(g,C);var e=Object.prototype.toString.call(g).slice(8,-1);return"Object"===e&&g.constructor&&(e=g.constructor.name),"Map"===e||"Set"===e?Array.from(g):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?I(g,C):void 0}}function C(I,C){return function(I){if(Array.isArray(I))return I}(I)||function(I,g){var C=null==I?null:"undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(null!=C){var e,A,t,r,c=[],i=!0,n=!1;try{if(t=(C=C.call(I)).next,0===g){if(Object(C)!==C)return;i=!1}else for(;!(i=(e=t.call(C)).done)&&(c.push(e.value),c.length!==g);i=!0);}catch(I){n=!0,A=I}finally{try{if(!i&&null!=C.return&&(r=C.return(),Object(r)!==r))return}finally{if(n)throw A}}return c}}(I,C)||g(I,C)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function e(I){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(I){return typeof I}:function(I){return I&&"function"==typeof Symbol&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},e(I)}function A(I){var g=function(I,g){if("object"!=e(I)||!I)return I;var C=I[Symbol.toPrimitive];if(void 0!==C){var A=C.call(I,g||"default");if("object"!=e(A))return A;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===g?String:Number)(I)}(I,"string");return"symbol"==e(g)?g:String(g)}function t(I,g,C){return(g=A(g))in I?Object.defineProperty(I,g,{value:C,enumerable:!0,configurable:!0,writable:!0}):I[g]=C,I}function r(I,g,C,e,A,t,r){try{var c=I[t](r),i=c.value}catch(I){return void C(I)}c.done?g(i):Promise.resolve(i).then(e,A)}function c(I){return function(){var g=this,C=arguments;return new Promise((function(e,A){var t=I.apply(g,C);function c(I){r(t,e,A,c,i,"next",I)}function i(I){r(t,e,A,c,i,"throw",I)}c(void 0)}))}}function i(I){return I&&I.__esModule&&Object.prototype.hasOwnProperty.call(I,"default")?I.default:I}var n={exports:{}},l={exports:{}};!function(I){function g(C){return I.exports=g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(I){return typeof I}:function(I){return I&&"function"==typeof Symbol&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},I.exports.__esModule=!0,I.exports.default=I.exports,g(C)}I.exports=g,I.exports.__esModule=!0,I.exports.default=I.exports}(l);var o=l.exports;!function(I){var g=o.default;function C(){I.exports=C=function(){return A},I.exports.__esModule=!0,I.exports.default=I.exports;var e,A={},t=Object.prototype,r=t.hasOwnProperty,c=Object.defineProperty||function(I,g,C){I[g]=C.value},i="function"==typeof Symbol?Symbol:{},n=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",o=i.toStringTag||"@@toStringTag";function s(I,g,C){return Object.defineProperty(I,g,{value:C,enumerable:!0,configurable:!0,writable:!0}),I[g]}try{s({},"")}catch(e){s=function(I,g,C){return I[g]=C}}function d(I,g,C,e){var A=g&&g.prototype instanceof B?g:B,t=Object.create(A.prototype),r=new f(e||[]);return c(t,"_invoke",{value:J(I,C,r)}),t}function a(I,g,C){try{return{type:"normal",arg:I.call(g,C)}}catch(I){return{type:"throw",arg:I}}}A.wrap=d;var b="suspendedStart",Z="suspendedYield",m="executing",u="completed",G={};function B(){}function y(){}function V(){}var W={};s(W,n,(function(){return this}));var h=Object.getPrototypeOf,R=h&&h(h(F([])));R&&R!==t&&r.call(R,n)&&(W=R);var X=V.prototype=B.prototype=Object.create(W);function p(I){["next","throw","return"].forEach((function(g){s(I,g,(function(I){return this._invoke(g,I)}))}))}function H(I,C){function e(A,t,c,i){var n=a(I[A],I,t);if("throw"!==n.type){var l=n.arg,o=l.value;return o&&"object"==g(o)&&r.call(o,"__await")?C.resolve(o.__await).then((function(I){e("next",I,c,i)}),(function(I){e("throw",I,c,i)})):C.resolve(o).then((function(I){l.value=I,c(l)}),(function(I){return e("throw",I,c,i)}))}i(n.arg)}var A;c(this,"_invoke",{value:function(I,g){function t(){return new C((function(C,A){e(I,g,C,A)}))}return A=A?A.then(t,t):t()}})}function J(I,g,C){var A=b;return function(t,r){if(A===m)throw new Error("Generator is already running");if(A===u){if("throw"===t)throw r;return{value:e,done:!0}}for(C.method=t,C.arg=r;;){var c=C.delegate;if(c){var i=S(c,C);if(i){if(i===G)continue;return i}}if("next"===C.method)C.sent=C._sent=C.arg;else if("throw"===C.method){if(A===b)throw A=u,C.arg;C.dispatchException(C.arg)}else"return"===C.method&&C.abrupt("return",C.arg);A=m;var n=a(I,g,C);if("normal"===n.type){if(A=C.done?u:Z,n.arg===G)continue;return{value:n.arg,done:C.done}}"throw"===n.type&&(A=u,C.method="throw",C.arg=n.arg)}}}function S(I,g){var C=g.method,A=I.iterator[C];if(A===e)return g.delegate=null,"throw"===C&&I.iterator.return&&(g.method="return",g.arg=e,S(I,g),"throw"===g.method)||"return"!==C&&(g.method="throw",g.arg=new TypeError("The iterator does not provide a '"+C+"' method")),G;var t=a(A,I.iterator,g.arg);if("throw"===t.type)return g.method="throw",g.arg=t.arg,g.delegate=null,G;var r=t.arg;return r?r.done?(g[I.resultName]=r.value,g.next=I.nextLoc,"return"!==g.method&&(g.method="next",g.arg=e),g.delegate=null,G):r:(g.method="throw",g.arg=new TypeError("iterator result is not an object"),g.delegate=null,G)}function w(I){var g={tryLoc:I[0]};1 in I&&(g.catchLoc=I[1]),2 in I&&(g.finallyLoc=I[2],g.afterLoc=I[3]),this.tryEntries.push(g)}function k(I){var g=I.completion||{};g.type="normal",delete g.arg,I.completion=g}function f(I){this.tryEntries=[{tryLoc:"root"}],I.forEach(w,this),this.reset(!0)}function F(I){if(I||""===I){var C=I[n];if(C)return C.call(I);if("function"==typeof I.next)return I;if(!isNaN(I.length)){var A=-1,t=function g(){for(;++A<I.length;)if(r.call(I,A))return g.value=I[A],g.done=!1,g;return g.value=e,g.done=!0,g};return t.next=t}}throw new TypeError(g(I)+" is not iterable")}return y.prototype=V,c(X,"constructor",{value:V,configurable:!0}),c(V,"constructor",{value:y,configurable:!0}),y.displayName=s(V,o,"GeneratorFunction"),A.isGeneratorFunction=function(I){var g="function"==typeof I&&I.constructor;return!!g&&(g===y||"GeneratorFunction"===(g.displayName||g.name))},A.mark=function(I){return Object.setPrototypeOf?Object.setPrototypeOf(I,V):(I.__proto__=V,s(I,o,"GeneratorFunction")),I.prototype=Object.create(X),I},A.awrap=function(I){return{__await:I}},p(H.prototype),s(H.prototype,l,(function(){return this})),A.AsyncIterator=H,A.async=function(I,g,C,e,t){void 0===t&&(t=Promise);var r=new H(d(I,g,C,e),t);return A.isGeneratorFunction(g)?r:r.next().then((function(I){return I.done?I.value:r.next()}))},p(X),s(X,o,"Generator"),s(X,n,(function(){return this})),s(X,"toString",(function(){return"[object Generator]"})),A.keys=function(I){var g=Object(I),C=[];for(var e in g)C.push(e);return C.reverse(),function I(){for(;C.length;){var e=C.pop();if(e in g)return I.value=e,I.done=!1,I}return I.done=!0,I}},A.values=F,f.prototype={constructor:f,reset:function(I){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(k),!I)for(var g in this)"t"===g.charAt(0)&&r.call(this,g)&&!isNaN(+g.slice(1))&&(this[g]=e)},stop:function(){this.done=!0;var I=this.tryEntries[0].completion;if("throw"===I.type)throw I.arg;return this.rval},dispatchException:function(I){if(this.done)throw I;var g=this;function C(C,A){return c.type="throw",c.arg=I,g.next=C,A&&(g.method="next",g.arg=e),!!A}for(var A=this.tryEntries.length-1;A>=0;--A){var t=this.tryEntries[A],c=t.completion;if("root"===t.tryLoc)return C("end");if(t.tryLoc<=this.prev){var i=r.call(t,"catchLoc"),n=r.call(t,"finallyLoc");if(i&&n){if(this.prev<t.catchLoc)return C(t.catchLoc,!0);if(this.prev<t.finallyLoc)return C(t.finallyLoc)}else if(i){if(this.prev<t.catchLoc)return C(t.catchLoc,!0)}else{if(!n)throw new Error("try statement without catch or finally");if(this.prev<t.finallyLoc)return C(t.finallyLoc)}}}},abrupt:function(I,g){for(var C=this.tryEntries.length-1;C>=0;--C){var e=this.tryEntries[C];if(e.tryLoc<=this.prev&&r.call(e,"finallyLoc")&&this.prev<e.finallyLoc){var A=e;break}}A&&("break"===I||"continue"===I)&&A.tryLoc<=g&&g<=A.finallyLoc&&(A=null);var t=A?A.completion:{};return t.type=I,t.arg=g,A?(this.method="next",this.next=A.finallyLoc,G):this.complete(t)},complete:function(I,g){if("throw"===I.type)throw I.arg;return"break"===I.type||"continue"===I.type?this.next=I.arg:"return"===I.type?(this.rval=this.arg=I.arg,this.method="return",this.next="end"):"normal"===I.type&&g&&(this.next=g),G},finish:function(I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.finallyLoc===I)return this.complete(C.completion,C.afterLoc),k(C),G}},catch:function(I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.tryLoc===I){var e=C.completion;if("throw"===e.type){var A=e.arg;k(C)}return A}}throw new Error("illegal catch attempt")},delegateYield:function(I,g,C){return this.delegate={iterator:F(I),resultName:g,nextLoc:C},"next"===this.method&&(this.arg=e),G}},A}I.exports=C,I.exports.__esModule=!0,I.exports.default=I.exports}(n);var s=(0,n.exports)(),d=s;try{regeneratorRuntime=s}catch(I){"object"==typeof globalThis?globalThis.regeneratorRuntime=s:Function("r","regeneratorRuntime = r")(s)}var a=i(d);const b={"Amazon Silk":"amazon_silk","Android Browser":"android",Bada:"bada",BlackBerry:"blackberry",Chrome:"chrome",Chromium:"chromium",Electron:"electron",Epiphany:"epiphany",Firefox:"firefox",Focus:"focus",Generic:"generic","Google Search":"google_search",Googlebot:"googlebot","Internet Explorer":"ie","K-Meleon":"k_meleon",Maxthon:"maxthon","Microsoft Edge":"edge","MZ Browser":"mz","NAVER Whale Browser":"naver",Opera:"opera","Opera Coast":"opera_coast",PhantomJS:"phantomjs",Puffin:"puffin",QupZilla:"qupzilla",QQ:"qq",QQLite:"qqlite",Safari:"safari",Sailfish:"sailfish","Samsung Internet for Android":"samsung_internet",SeaMonkey:"seamonkey",Sleipnir:"sleipnir",Swing:"swing",Tizen:"tizen","UC Browser":"uc",Vivaldi:"vivaldi","WebOS Browser":"webos",WeChat:"wechat","Yandex Browser":"yandex",Roku:"roku"},Z={amazon_silk:"Amazon Silk",android:"Android Browser",bada:"Bada",blackberry:"BlackBerry",chrome:"Chrome",chromium:"Chromium",electron:"Electron",epiphany:"Epiphany",firefox:"Firefox",focus:"Focus",generic:"Generic",googlebot:"Googlebot",google_search:"Google Search",ie:"Internet Explorer",k_meleon:"K-Meleon",maxthon:"Maxthon",edge:"Microsoft Edge",mz:"MZ Browser",naver:"NAVER Whale Browser",opera:"Opera",opera_coast:"Opera Coast",phantomjs:"PhantomJS",puffin:"Puffin",qupzilla:"QupZilla",qq:"QQ Browser",qqlite:"QQ Browser Lite",safari:"Safari",sailfish:"Sailfish",samsung_internet:"Samsung Internet for Android",seamonkey:"SeaMonkey",sleipnir:"Sleipnir",swing:"Swing",tizen:"Tizen",uc:"UC Browser",vivaldi:"Vivaldi",webos:"WebOS Browser",wechat:"WeChat",yandex:"Yandex Browser"},m={tablet:"tablet",mobile:"mobile",desktop:"desktop",tv:"tv"},u={WindowsPhone:"Windows Phone",Windows:"Windows",MacOS:"macOS",iOS:"iOS",Android:"Android",WebOS:"WebOS",BlackBerry:"BlackBerry",Bada:"Bada",Tizen:"Tizen",Linux:"Linux",ChromeOS:"Chrome OS",PlayStation4:"PlayStation 4",Roku:"Roku"},G={EdgeHTML:"EdgeHTML",Blink:"Blink",Trident:"Trident",Presto:"Presto",Gecko:"Gecko",WebKit:"WebKit"};class B{static getFirstMatch(I,g){const C=g.match(I);return C&&C.length>0&&C[1]||""}static getSecondMatch(I,g){const C=g.match(I);return C&&C.length>1&&C[2]||""}static matchAndReturnConst(I,g,C){if(I.test(g))return C}static getWindowsVersionName(I){switch(I){case"NT":return"NT";case"XP":case"NT 5.1":return"XP";case"NT 5.0":return"2000";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}}static getMacOSVersionName(I){const g=I.split(".").splice(0,2).map((I=>parseInt(I,10)||0));if(g.push(0),10===g[0])switch(g[1]){case 5:return"Leopard";case 6:return"Snow Leopard";case 7:return"Lion";case 8:return"Mountain Lion";case 9:return"Mavericks";case 10:return"Yosemite";case 11:return"El Capitan";case 12:return"Sierra";case 13:return"High Sierra";case 14:return"Mojave";case 15:return"Catalina";default:return}}static getAndroidVersionName(I){const g=I.split(".").splice(0,2).map((I=>parseInt(I,10)||0));if(g.push(0),!(1===g[0]&&g[1]<5))return 1===g[0]&&g[1]<6?"Cupcake":1===g[0]&&g[1]>=6?"Donut":2===g[0]&&g[1]<2?"Eclair":2===g[0]&&2===g[1]?"Froyo":2===g[0]&&g[1]>2?"Gingerbread":3===g[0]?"Honeycomb":4===g[0]&&g[1]<1?"Ice Cream Sandwich":4===g[0]&&g[1]<4?"Jelly Bean":4===g[0]&&g[1]>=4?"KitKat":5===g[0]?"Lollipop":6===g[0]?"Marshmallow":7===g[0]?"Nougat":8===g[0]?"Oreo":9===g[0]?"Pie":void 0}static getVersionPrecision(I){return I.split(".").length}static compareVersions(I,g,C=!1){const e=B.getVersionPrecision(I),A=B.getVersionPrecision(g);let t=Math.max(e,A),r=0;const c=B.map([I,g],(I=>{const g=t-B.getVersionPrecision(I),C=I+new Array(g+1).join(".0");return B.map(C.split("."),(I=>new Array(20-I.length).join("0")+I)).reverse()}));for(C&&(r=t-Math.min(e,A)),t-=1;t>=r;){if(c[0][t]>c[1][t])return 1;if(c[0][t]===c[1][t]){if(t===r)return 0;t-=1}else if(c[0][t]<c[1][t])return-1}}static map(I,g){const C=[];let e;if(Array.prototype.map)return Array.prototype.map.call(I,g);for(e=0;e<I.length;e+=1)C.push(g(I[e]));return C}static find(I,g){let C,e;if(Array.prototype.find)return Array.prototype.find.call(I,g);for(C=0,e=I.length;C<e;C+=1){const e=I[C];if(g(e,C))return e}}static assign(I,...g){const C=I;let e,A;if(Object.assign)return Object.assign(I,...g);for(e=0,A=g.length;e<A;e+=1){const I=g[e];if("object"==typeof I&&null!==I){Object.keys(I).forEach((g=>{C[g]=I[g]}))}}return I}static getBrowserAlias(I){return b[I]}static getBrowserTypeByAlias(I){return Z[I]||""}}const y=/version\/(\d+(\.?_?\d+)+)/i,V=[{test:[/googlebot/i],describe(I){const g={name:"Googlebot"},C=B.getFirstMatch(/googlebot\/(\d+(\.\d+))/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/opera/i],describe(I){const g={name:"Opera"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/opr\/|opios/i],describe(I){const g={name:"Opera"},C=B.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/SamsungBrowser/i],describe(I){const g={name:"Samsung Internet for Android"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/Whale/i],describe(I){const g={name:"NAVER Whale Browser"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/MZBrowser/i],describe(I){const g={name:"MZ Browser"},C=B.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/focus/i],describe(I){const g={name:"Focus"},C=B.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/swing/i],describe(I){const g={name:"Swing"},C=B.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/coast/i],describe(I){const g={name:"Opera Coast"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/opt\/\d+(?:.?_?\d+)+/i],describe(I){const g={name:"Opera Touch"},C=B.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/yabrowser/i],describe(I){const g={name:"Yandex Browser"},C=B.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/ucbrowser/i],describe(I){const g={name:"UC Browser"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/Maxthon|mxios/i],describe(I){const g={name:"Maxthon"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/epiphany/i],describe(I){const g={name:"Epiphany"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/puffin/i],describe(I){const g={name:"Puffin"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/sleipnir/i],describe(I){const g={name:"Sleipnir"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/k-meleon/i],describe(I){const g={name:"K-Meleon"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/micromessenger/i],describe(I){const g={name:"WeChat"},C=B.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/qqbrowser/i],describe(I){const g={name:/qqbrowserlite/i.test(I)?"QQ Browser Lite":"QQ Browser"},C=B.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/msie|trident/i],describe(I){const g={name:"Internet Explorer"},C=B.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/\sedg\//i],describe(I){const g={name:"Microsoft Edge"},C=B.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/edg([ea]|ios)/i],describe(I){const g={name:"Microsoft Edge"},C=B.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/vivaldi/i],describe(I){const g={name:"Vivaldi"},C=B.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/seamonkey/i],describe(I){const g={name:"SeaMonkey"},C=B.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/sailfish/i],describe(I){const g={name:"Sailfish"},C=B.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i,I);return C&&(g.version=C),g}},{test:[/silk/i],describe(I){const g={name:"Amazon Silk"},C=B.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/phantom/i],describe(I){const g={name:"PhantomJS"},C=B.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/slimerjs/i],describe(I){const g={name:"SlimerJS"},C=B.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(I){const g={name:"BlackBerry"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/(web|hpw)[o0]s/i],describe(I){const g={name:"WebOS Browser"},C=B.getFirstMatch(y,I)||B.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/bada/i],describe(I){const g={name:"Bada"},C=B.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/tizen/i],describe(I){const g={name:"Tizen"},C=B.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/qupzilla/i],describe(I){const g={name:"QupZilla"},C=B.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/firefox|iceweasel|fxios/i],describe(I){const g={name:"Firefox"},C=B.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/electron/i],describe(I){const g={name:"Electron"},C=B.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/MiuiBrowser/i],describe(I){const g={name:"Miui"},C=B.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/chromium/i],describe(I){const g={name:"Chromium"},C=B.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,I)||B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/chrome|crios|crmo/i],describe(I){const g={name:"Chrome"},C=B.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/GSA/i],describe(I){const g={name:"Google Search"},C=B.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test(I){const g=!I.test(/like android/i),C=I.test(/android/i);return g&&C},describe(I){const g={name:"Android Browser"},C=B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/playstation 4/i],describe(I){const g={name:"PlayStation 4"},C=B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/safari|applewebkit/i],describe(I){const g={name:"Safari"},C=B.getFirstMatch(y,I);return C&&(g.version=C),g}},{test:[/.*/i],describe(I){const g=-1!==I.search("\\(")?/^(.*)\/(.*)[ \t]\((.*)/:/^(.*)\/(.*) /;return{name:B.getFirstMatch(g,I),version:B.getSecondMatch(g,I)}}}];var W=[{test:[/Roku\/DVP/],describe(I){const g=B.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i,I);return{name:u.Roku,version:g}}},{test:[/windows phone/i],describe(I){const g=B.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i,I);return{name:u.WindowsPhone,version:g}}},{test:[/windows /i],describe(I){const g=B.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i,I),C=B.getWindowsVersionName(g);return{name:u.Windows,version:g,versionName:C}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe(I){const g={name:u.iOS},C=B.getSecondMatch(/(Version\/)(\d[\d.]+)/,I);return C&&(g.version=C),g}},{test:[/macintosh/i],describe(I){const g=B.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i,I).replace(/[_\s]/g,"."),C=B.getMacOSVersionName(g),e={name:u.MacOS,version:g};return C&&(e.versionName=C),e}},{test:[/(ipod|iphone|ipad)/i],describe(I){const g=B.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i,I).replace(/[_\s]/g,".");return{name:u.iOS,version:g}}},{test(I){const g=!I.test(/like android/i),C=I.test(/android/i);return g&&C},describe(I){const g=B.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i,I),C=B.getAndroidVersionName(g),e={name:u.Android,version:g};return C&&(e.versionName=C),e}},{test:[/(web|hpw)[o0]s/i],describe(I){const g=B.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,I),C={name:u.WebOS};return g&&g.length&&(C.version=g),C}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(I){const g=B.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i,I)||B.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i,I)||B.getFirstMatch(/\bbb(\d+)/i,I);return{name:u.BlackBerry,version:g}}},{test:[/bada/i],describe(I){const g=B.getFirstMatch(/bada\/(\d+(\.\d+)*)/i,I);return{name:u.Bada,version:g}}},{test:[/tizen/i],describe(I){const g=B.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i,I);return{name:u.Tizen,version:g}}},{test:[/linux/i],describe:()=>({name:u.Linux})},{test:[/CrOS/],describe:()=>({name:u.ChromeOS})},{test:[/PlayStation 4/],describe(I){const g=B.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i,I);return{name:u.PlayStation4,version:g}}}],h=[{test:[/googlebot/i],describe:()=>({type:"bot",vendor:"Google"})},{test:[/huawei/i],describe(I){const g=B.getFirstMatch(/(can-l01)/i,I)&&"Nova",C={type:m.mobile,vendor:"Huawei"};return g&&(C.model=g),C}},{test:[/nexus\s*(?:7|8|9|10).*/i],describe:()=>({type:m.tablet,vendor:"Nexus"})},{test:[/ipad/i],describe:()=>({type:m.tablet,vendor:"Apple",model:"iPad"})},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:()=>({type:m.tablet,vendor:"Apple",model:"iPad"})},{test:[/kftt build/i],describe:()=>({type:m.tablet,vendor:"Amazon",model:"Kindle Fire HD 7"})},{test:[/silk/i],describe:()=>({type:m.tablet,vendor:"Amazon"})},{test:[/tablet(?! pc)/i],describe:()=>({type:m.tablet})},{test(I){const g=I.test(/ipod|iphone/i),C=I.test(/like (ipod|iphone)/i);return g&&!C},describe(I){const g=B.getFirstMatch(/(ipod|iphone)/i,I);return{type:m.mobile,vendor:"Apple",model:g}}},{test:[/nexus\s*[0-6].*/i,/galaxy nexus/i],describe:()=>({type:m.mobile,vendor:"Nexus"})},{test:[/[^-]mobi/i],describe:()=>({type:m.mobile})},{test:I=>"blackberry"===I.getBrowserName(!0),describe:()=>({type:m.mobile,vendor:"BlackBerry"})},{test:I=>"bada"===I.getBrowserName(!0),describe:()=>({type:m.mobile})},{test:I=>"windows phone"===I.getBrowserName(),describe:()=>({type:m.mobile,vendor:"Microsoft"})},{test(I){const g=Number(String(I.getOSVersion()).split(".")[0]);return"android"===I.getOSName(!0)&&g>=3},describe:()=>({type:m.tablet})},{test:I=>"android"===I.getOSName(!0),describe:()=>({type:m.mobile})},{test:I=>"macos"===I.getOSName(!0),describe:()=>({type:m.desktop,vendor:"Apple"})},{test:I=>"windows"===I.getOSName(!0),describe:()=>({type:m.desktop})},{test:I=>"linux"===I.getOSName(!0),describe:()=>({type:m.desktop})},{test:I=>"playstation 4"===I.getOSName(!0),describe:()=>({type:m.tv})},{test:I=>"roku"===I.getOSName(!0),describe:()=>({type:m.tv})}],R=[{test:I=>"microsoft edge"===I.getBrowserName(!0),describe(I){if(/\sedg\//i.test(I))return{name:G.Blink};const g=B.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i,I);return{name:G.EdgeHTML,version:g}}},{test:[/trident/i],describe(I){const g={name:G.Trident},C=B.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:I=>I.test(/presto/i),describe(I){const g={name:G.Presto},C=B.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test(I){const g=I.test(/gecko/i),C=I.test(/like gecko/i);return g&&!C},describe(I){const g={name:G.Gecko},C=B.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}},{test:[/(apple)?webkit\/537\.36/i],describe:()=>({name:G.Blink})},{test:[/(apple)?webkit/i],describe(I){const g={name:G.WebKit},C=B.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i,I);return C&&(g.version=C),g}}];class X{constructor(I,g=!1){if(null==I||""===I)throw new Error("UserAgent parameter can't be empty");this._ua=I,this.parsedResult={},!0!==g&&this.parse()}getUA(){return this._ua}test(I){return I.test(this._ua)}parseBrowser(){this.parsedResult.browser={};const I=B.find(V,(I=>{if("function"==typeof I.test)return I.test(this);if(I.test instanceof Array)return I.test.some((I=>this.test(I)));throw new Error("Browser's test function is not valid")}));return I&&(this.parsedResult.browser=I.describe(this.getUA())),this.parsedResult.browser}getBrowser(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()}getBrowserName(I){return I?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""}getBrowserVersion(){return this.getBrowser().version}getOS(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()}parseOS(){this.parsedResult.os={};const I=B.find(W,(I=>{if("function"==typeof I.test)return I.test(this);if(I.test instanceof Array)return I.test.some((I=>this.test(I)));throw new Error("Browser's test function is not valid")}));return I&&(this.parsedResult.os=I.describe(this.getUA())),this.parsedResult.os}getOSName(I){const{name:g}=this.getOS();return I?String(g).toLowerCase()||"":g||""}getOSVersion(){return this.getOS().version}getPlatform(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()}getPlatformType(I=!1){const{type:g}=this.getPlatform();return I?String(g).toLowerCase()||"":g||""}parsePlatform(){this.parsedResult.platform={};const I=B.find(h,(I=>{if("function"==typeof I.test)return I.test(this);if(I.test instanceof Array)return I.test.some((I=>this.test(I)));throw new Error("Browser's test function is not valid")}));return I&&(this.parsedResult.platform=I.describe(this.getUA())),this.parsedResult.platform}getEngine(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()}getEngineName(I){return I?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""}parseEngine(){this.parsedResult.engine={};const I=B.find(R,(I=>{if("function"==typeof I.test)return I.test(this);if(I.test instanceof Array)return I.test.some((I=>this.test(I)));throw new Error("Browser's test function is not valid")}));return I&&(this.parsedResult.engine=I.describe(this.getUA())),this.parsedResult.engine}parse(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this}getResult(){return B.assign({},this.parsedResult)}satisfies(I){const g={};let C=0;const e={};let A=0;if(Object.keys(I).forEach((t=>{const r=I[t];"string"==typeof r?(e[t]=r,A+=1):"object"==typeof r&&(g[t]=r,C+=1)})),C>0){const I=Object.keys(g),C=B.find(I,(I=>this.isOS(I)));if(C){const I=this.satisfies(g[C]);if(void 0!==I)return I}const e=B.find(I,(I=>this.isPlatform(I)));if(e){const I=this.satisfies(g[e]);if(void 0!==I)return I}}if(A>0){const I=Object.keys(e),g=B.find(I,(I=>this.isBrowser(I,!0)));if(void 0!==g)return this.compareVersion(e[g])}}isBrowser(I,g=!1){const C=this.getBrowserName().toLowerCase();let e=I.toLowerCase();const A=B.getBrowserTypeByAlias(e);return g&&A&&(e=A.toLowerCase()),e===C}compareVersion(I){let g=[0],C=I,e=!1;const A=this.getBrowserVersion();if("string"==typeof A)return">"===I[0]||"<"===I[0]?(C=I.substr(1),"="===I[1]?(e=!0,C=I.substr(2)):g=[],">"===I[0]?g.push(1):g.push(-1)):"="===I[0]?C=I.substr(1):"~"===I[0]&&(e=!0,C=I.substr(1)),g.indexOf(B.compareVersions(A,C,e))>-1}isOS(I){return this.getOSName(!0)===String(I).toLowerCase()}isPlatform(I){return this.getPlatformType(!0)===String(I).toLowerCase()}isEngine(I){return this.getEngineName(!0)===String(I).toLowerCase()}is(I,g=!1){return this.isBrowser(I,g)||this.isOS(I)||this.isPlatform(I)}some(I=[]){return I.some((I=>this.is(I)))}}
/*!
 * Bowser - a browser detector
 * https://github.com/lancedikson/bowser
 * MIT License | (c) Dustin Diaz 2012-2015
 * MIT License | (c) Denis Demchenko 2015-2019
 */class p{static getParser(I,g=!1){if("string"!=typeof I)throw new Error("UserAgent should be a string");return new X(I,g)}static parse(I){return new X(I).getResult()}static get BROWSER_MAP(){return Z}static get ENGINE_MAP(){return G}static get OS_MAP(){return u}static get PLATFORMS_MAP(){return m}}var H={exports:{}},J={exports:{}};!function(I){function g(C){return I.exports=g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(I){return typeof I}:function(I){return I&&"function"==typeof Symbol&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},I.exports.__esModule=!0,I.exports.default=I.exports,g(C)}I.exports=g,I.exports.__esModule=!0,I.exports.default=I.exports}(J);var S=J.exports;!function(I){var g=S.default;function C(){I.exports=C=function(){return A},I.exports.__esModule=!0,I.exports.default=I.exports;var e,A={},t=Object.prototype,r=t.hasOwnProperty,c=Object.defineProperty||function(I,g,C){I[g]=C.value},i="function"==typeof Symbol?Symbol:{},n=i.iterator||"@@iterator",l=i.asyncIterator||"@@asyncIterator",o=i.toStringTag||"@@toStringTag";function s(I,g,C){return Object.defineProperty(I,g,{value:C,enumerable:!0,configurable:!0,writable:!0}),I[g]}try{s({},"")}catch(e){s=function(I,g,C){return I[g]=C}}function d(I,g,C,e){var A=g&&g.prototype instanceof B?g:B,t=Object.create(A.prototype),r=new f(e||[]);return c(t,"_invoke",{value:J(I,C,r)}),t}function a(I,g,C){try{return{type:"normal",arg:I.call(g,C)}}catch(I){return{type:"throw",arg:I}}}A.wrap=d;var b="suspendedStart",Z="suspendedYield",m="executing",u="completed",G={};function B(){}function y(){}function V(){}var W={};s(W,n,(function(){return this}));var h=Object.getPrototypeOf,R=h&&h(h(F([])));R&&R!==t&&r.call(R,n)&&(W=R);var X=V.prototype=B.prototype=Object.create(W);function p(I){["next","throw","return"].forEach((function(g){s(I,g,(function(I){return this._invoke(g,I)}))}))}function H(I,C){function e(A,t,c,i){var n=a(I[A],I,t);if("throw"!==n.type){var l=n.arg,o=l.value;return o&&"object"==g(o)&&r.call(o,"__await")?C.resolve(o.__await).then((function(I){e("next",I,c,i)}),(function(I){e("throw",I,c,i)})):C.resolve(o).then((function(I){l.value=I,c(l)}),(function(I){return e("throw",I,c,i)}))}i(n.arg)}var A;c(this,"_invoke",{value:function(I,g){function t(){return new C((function(C,A){e(I,g,C,A)}))}return A=A?A.then(t,t):t()}})}function J(I,g,C){var A=b;return function(t,r){if(A===m)throw new Error("Generator is already running");if(A===u){if("throw"===t)throw r;return{value:e,done:!0}}for(C.method=t,C.arg=r;;){var c=C.delegate;if(c){var i=S(c,C);if(i){if(i===G)continue;return i}}if("next"===C.method)C.sent=C._sent=C.arg;else if("throw"===C.method){if(A===b)throw A=u,C.arg;C.dispatchException(C.arg)}else"return"===C.method&&C.abrupt("return",C.arg);A=m;var n=a(I,g,C);if("normal"===n.type){if(A=C.done?u:Z,n.arg===G)continue;return{value:n.arg,done:C.done}}"throw"===n.type&&(A=u,C.method="throw",C.arg=n.arg)}}}function S(I,g){var C=g.method,A=I.iterator[C];if(A===e)return g.delegate=null,"throw"===C&&I.iterator.return&&(g.method="return",g.arg=e,S(I,g),"throw"===g.method)||"return"!==C&&(g.method="throw",g.arg=new TypeError("The iterator does not provide a '"+C+"' method")),G;var t=a(A,I.iterator,g.arg);if("throw"===t.type)return g.method="throw",g.arg=t.arg,g.delegate=null,G;var r=t.arg;return r?r.done?(g[I.resultName]=r.value,g.next=I.nextLoc,"return"!==g.method&&(g.method="next",g.arg=e),g.delegate=null,G):r:(g.method="throw",g.arg=new TypeError("iterator result is not an object"),g.delegate=null,G)}function w(I){var g={tryLoc:I[0]};1 in I&&(g.catchLoc=I[1]),2 in I&&(g.finallyLoc=I[2],g.afterLoc=I[3]),this.tryEntries.push(g)}function k(I){var g=I.completion||{};g.type="normal",delete g.arg,I.completion=g}function f(I){this.tryEntries=[{tryLoc:"root"}],I.forEach(w,this),this.reset(!0)}function F(I){if(I||""===I){var C=I[n];if(C)return C.call(I);if("function"==typeof I.next)return I;if(!isNaN(I.length)){var A=-1,t=function g(){for(;++A<I.length;)if(r.call(I,A))return g.value=I[A],g.done=!1,g;return g.value=e,g.done=!0,g};return t.next=t}}throw new TypeError(g(I)+" is not iterable")}return y.prototype=V,c(X,"constructor",{value:V,configurable:!0}),c(V,"constructor",{value:y,configurable:!0}),y.displayName=s(V,o,"GeneratorFunction"),A.isGeneratorFunction=function(I){var g="function"==typeof I&&I.constructor;return!!g&&(g===y||"GeneratorFunction"===(g.displayName||g.name))},A.mark=function(I){return Object.setPrototypeOf?Object.setPrototypeOf(I,V):(I.__proto__=V,s(I,o,"GeneratorFunction")),I.prototype=Object.create(X),I},A.awrap=function(I){return{__await:I}},p(H.prototype),s(H.prototype,l,(function(){return this})),A.AsyncIterator=H,A.async=function(I,g,C,e,t){void 0===t&&(t=Promise);var r=new H(d(I,g,C,e),t);return A.isGeneratorFunction(g)?r:r.next().then((function(I){return I.done?I.value:r.next()}))},p(X),s(X,o,"Generator"),s(X,n,(function(){return this})),s(X,"toString",(function(){return"[object Generator]"})),A.keys=function(I){var g=Object(I),C=[];for(var e in g)C.push(e);return C.reverse(),function I(){for(;C.length;){var e=C.pop();if(e in g)return I.value=e,I.done=!1,I}return I.done=!0,I}},A.values=F,f.prototype={constructor:f,reset:function(I){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(k),!I)for(var g in this)"t"===g.charAt(0)&&r.call(this,g)&&!isNaN(+g.slice(1))&&(this[g]=e)},stop:function(){this.done=!0;var I=this.tryEntries[0].completion;if("throw"===I.type)throw I.arg;return this.rval},dispatchException:function(I){if(this.done)throw I;var g=this;function C(C,A){return c.type="throw",c.arg=I,g.next=C,A&&(g.method="next",g.arg=e),!!A}for(var A=this.tryEntries.length-1;A>=0;--A){var t=this.tryEntries[A],c=t.completion;if("root"===t.tryLoc)return C("end");if(t.tryLoc<=this.prev){var i=r.call(t,"catchLoc"),n=r.call(t,"finallyLoc");if(i&&n){if(this.prev<t.catchLoc)return C(t.catchLoc,!0);if(this.prev<t.finallyLoc)return C(t.finallyLoc)}else if(i){if(this.prev<t.catchLoc)return C(t.catchLoc,!0)}else{if(!n)throw new Error("try statement without catch or finally");if(this.prev<t.finallyLoc)return C(t.finallyLoc)}}}},abrupt:function(I,g){for(var C=this.tryEntries.length-1;C>=0;--C){var e=this.tryEntries[C];if(e.tryLoc<=this.prev&&r.call(e,"finallyLoc")&&this.prev<e.finallyLoc){var A=e;break}}A&&("break"===I||"continue"===I)&&A.tryLoc<=g&&g<=A.finallyLoc&&(A=null);var t=A?A.completion:{};return t.type=I,t.arg=g,A?(this.method="next",this.next=A.finallyLoc,G):this.complete(t)},complete:function(I,g){if("throw"===I.type)throw I.arg;return"break"===I.type||"continue"===I.type?this.next=I.arg:"return"===I.type?(this.rval=this.arg=I.arg,this.method="return",this.next="end"):"normal"===I.type&&g&&(this.next=g),G},finish:function(I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.finallyLoc===I)return this.complete(C.completion,C.afterLoc),k(C),G}},catch:function(I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.tryLoc===I){var e=C.completion;if("throw"===e.type){var A=e.arg;k(C)}return A}}throw new Error("illegal catch attempt")},delegateYield:function(I,g,C){return this.delegate={iterator:F(I),resultName:g,nextLoc:C},"next"===this.method&&(this.arg=e),G}},A}I.exports=C,I.exports.__esModule=!0,I.exports.default=I.exports}(H);var w=(0,H.exports)();try{regeneratorRuntime=w}catch(I){"object"==typeof globalThis?globalThis.regeneratorRuntime=w:Function("r","regeneratorRuntime = r")(w)}function k(I){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(I){return typeof I}:function(I){return I&&"function"==typeof Symbol&&I.constructor===Symbol&&I!==Symbol.prototype?"symbol":typeof I},k(I)}function f(I){var g=function(I,g){if("object"!==k(I)||null===I)return I;var C=I[Symbol.toPrimitive];if(void 0!==C){var e=C.call(I,g||"default");if("object"!==k(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===g?String:Number)(I)}(I,"string");return"symbol"===k(g)?g:String(g)}function F(I,g){for(var C=0;C<g.length;C++){var e=g[C];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(I,f(e.key),e)}}function v(I){return I<0?I>>>0:I}function Y(I,g){for(var C=g;0!==I[C];)C++;return new TextDecoder("utf-8").decode(I.subarray(g,C))}function K(I,g,C){var e=void 0===g?null:g,A=function(I,g){var C=atob(I);if(g){for(var e=new Uint8Array(C.length),A=0,t=C.length;A<t;++A)e[A]=C.charCodeAt(A);return String.fromCharCode.apply(null,new Uint16Array(e.buffer))}return C}(I,void 0!==C&&C),t=A.indexOf("\n",10)+1,r=A.substring(t)+(e?"//# sourceMappingURL="+e:""),c=new Blob([r],{type:"application/javascript"});return URL.createObjectURL(c)}(function(){function I(){!function(I,g){if(!(I instanceof g))throw new TypeError("Cannot call a class as a function")}(this,I),this._path=""}var g,C,e;return g=I,e=[{key:"getPtr",value:function(g){if(I._filePtrs.has(g))return I._filePtrs.get(g);throw new Error("File instance not found.")}},{key:"setPtr",value:function(g,C){I._filePtrs.set(g,C)}},{key:"removePtr",value:function(g){I._filePtrs.delete(g)}}],(C=[{key:"meta",get:function(){if(void 0!==this._meta)return Object.assign({version:0},this._meta)}}])&&F(g.prototype,C),e&&F(g,e),Object.defineProperty(g,"prototype",{writable:!1}),I}())._filePtrs=new Map;var N,E,U,M,Q,T=(N="",E=null,U=!1,function(I){return M=M||K(N,E,U),new Worker(M,I)});function L(I,g){if(!(I instanceof g))throw new TypeError("Cannot call a class as a function")}function z(I,g){for(var C=0;C<g.length;C++){var e=g[C];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(I,A(e.key),e)}}function x(I,g,C){return g&&z(I.prototype,g),C&&z(I,C),Object.defineProperty(I,"prototype",{writable:!1}),I}function _(I,g){var C="undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(!C){if(Array.isArray(I)||(C=function(I,g){if(!I)return;if("string"==typeof I)return P(I,g);var C=Object.prototype.toString.call(I).slice(8,-1);"Object"===C&&I.constructor&&(C=I.constructor.name);if("Map"===C||"Set"===C)return Array.from(I);if("Arguments"===C||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))return P(I,g)}(I))||g&&I&&"number"==typeof I.length){C&&(I=C);var e=0,A=function(){};return{s:A,n:function(){return e>=I.length?{done:!0}:{done:!1,value:I[e++]}},e:function(I){throw I},f:A}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,r=!0,c=!1;return{s:function(){C=C.call(I)},n:function(){var I=C.next();return r=I.done,I},e:function(I){c=!0,t=I},f:function(){try{r||null==C.return||C.return()}finally{if(c)throw t}}}}function P(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}!function(I){I[I.INIT=0]="INIT",I[I.ALLOC=1]="ALLOC",I[I.FREE=2]="FREE",I[I.COPY_TO_XPU=3]="COPY_TO_XPU",I[I.COPY_FROM_XPU=4]="COPY_FROM_XPU",I[I.MEMSET=5]="MEMSET",I[I.TIMER_START=6]="TIMER_START",I[I.TIMER_STOP=7]="TIMER_STOP",I[I.MATRIX_VECTOR_MULTIPLY=8]="MATRIX_VECTOR_MULTIPLY",I[I.SYNC_VECTOR=9]="SYNC_VECTOR"}(Q||(Q={}));var D=function(){function I(){L(this,I)}return x(I,null,[{key:"addXpu",value:function(g,C){I.xpuObjects.set(g,C)}},{key:"getXpu",value:function(g){return I.xpuObjects.get(g)}},{key:"hasXpu",value:function(g){return I.xpuObjects.has(g)}},{key:"removeXpu",value:function(g){if(I.xpuObjects.has(g)){var C,e=_(I.xpuObjects.get(g).deviceMem);try{for(e.s();!(C=e.n()).done;){var A=C.value;I.memoryObjects.delete(A)}}catch(I){e.e(I)}finally{e.f()}I.xpuObjects.delete(g)}}},{key:"addMemory",value:function(g,C){I.memoryObjects.set(g,C),I.xpuObjects.get(C.objAddress).deviceMem.add(g)}},{key:"getMemory",value:function(g){return I.memoryObjects.get(g)}},{key:"hasMemory",value:function(g){return I.memoryObjects.has(g)}},{key:"removeMemory",value:function(g){I.hasMemory(g)&&I.xpuObjects.get(I.getMemory(g).objAddress).deviceMem.delete(g),I.memoryObjects.delete(g)}},{key:"getUniquePointer",value:function(){for(;;){var I=Math.ceil(1e3*(performance.now()+Math.random()));if(!this.uniquePointers.has(I))return this.uniquePointers.add(I),I}}},{key:"removeUniquePointer",value:function(I){this.uniquePointers.has(I)&&this.uniquePointers.delete(I)}}]),I}();function O(C){return function(g){if(Array.isArray(g))return I(g)}(C)||function(I){if("undefined"!=typeof Symbol&&null!=I[Symbol.iterator]||null!=I["@@iterator"])return Array.from(I)}(C)||g(C)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function j(I,g){var C="undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(!C){if(Array.isArray(I)||(C=function(I,g){if(!I)return;if("string"==typeof I)return q(I,g);var C=Object.prototype.toString.call(I).slice(8,-1);"Object"===C&&I.constructor&&(C=I.constructor.name);if("Map"===C||"Set"===C)return Array.from(I);if("Arguments"===C||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))return q(I,g)}(I))||g&&I&&"number"==typeof I.length){C&&(I=C);var e=0,A=function(){};return{s:A,n:function(){return e>=I.length?{done:!0}:{done:!1,value:I[e++]}},e:function(I){throw I},f:A}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,r=!0,c=!1;return{s:function(){C=C.call(I)},n:function(){var I=C.next();return r=I.done,I},e:function(I){c=!0,t=I},f:function(){try{r||null==C.return||C.return()}finally{if(c)throw t}}}}function q(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}t(D,"xpuObjects",new Map),t(D,"memoryObjects",new Map),t(D,"uniquePointers",new Set);var $=new Map;function II(I){return $.has(I)||$.set(I,function(){for(var I="BCDEF".split(""),g="#",C=0;C<6;C++)g+=I[Math.floor(Math.random()*I.length)];return g}()),$.get(I)}var gI=function(){function I(){L(this,I),t(this,"_names",new Map),t(this,"_paths",void 0),t(this,"_stack",void 0),t(this,"_enabled",void 0),t(this,"_memory",null),this._paths=new Map,this._stack=[],this._enabled=!1}var g;return x(I,[{key:"addName",value:function(I,g){this._names.set(I,g)}},{key:"getName",value:function(I){return this._names.get(I)}},{key:"enabled",get:function(){return this._enabled},set:function(I){this._enabled=I}},{key:"memory",get:function(){return this._memory},set:function(I){this._memory=I}},{key:"graphify",value:function(I,g,C,e){var A=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,t=I.name,r=this;function i(){return i=c(a.mark((function c(){var i,n,l,o,s,d,b,Z=arguments;return a.wrap((function(c){for(;;)switch(c.prev=c.next){case 0:for(i=Z.length,n=new Array(i),l=0;l<i;l++)n[l]=Z[l];if(r.memory&&void 0!==A&&(new Int32Array(r.memory.buffer)[n[n.length-1]/Int32Array.BYTES_PER_ELEMENT]=A),r.enabled){c.next=6;break}return c.next=5,I.apply(I,n);case 5:return c.abrupt("return");case 6:o=g.map((function(I){return n[I]})),s=C>=0?n[C]:C,d=e?n[e]:void 0,(b=new CI(t,I,n)).inputsAddr=o,b.output=s,b.subName=r.getName(d),"pvXpuDeviceMemFree"===t||"pvXpuGraphifiedFree"===t?r.addFreeNode(b,o[0]):r.addNode(b,o);case 14:case"end":return c.stop()}}),c)}))),i.apply(this,arguments)}return function(){return i.apply(this,arguments)}}},{key:"addNode",value:function(I,g){this._stack.push(I),this._paths.has(I)||this._paths.set(I,new Set);var C,e=j(g);try{for(e.s();!(C=e.n()).done;)for(var A=C.value,t=this._stack.length-2;t>=0;t--){var r=this._stack[t];if(r.output===A){this._paths.get(r).add(I),I.inputs.add(r);break}}}catch(I){e.e(I)}finally{e.f()}}},{key:"addFreeNode",value:function(I,g){this._stack.push(I),this._paths.has(I)||this._paths.set(I,new Set);for(var C=this._stack.length-2;C>=0;C--){var e=this._stack[C];if(e.inputsAddr.includes(g)){this._paths.get(e).add(I),I.inputs.add(e);break}}}},{key:"executeHelper",value:function(I){var g=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(I.numVisited++,I.level=Math.max(g,I.level),!(I.numVisited<I.inputs.size||I.visited)){I.visited=!0,I.runOnce();var C,e=j(this._paths.get(I));try{for(e.s();!(C=e.n()).done;){var A=C.value;this.executeHelper(A,I.level+1)}}catch(I){e.e(I)}finally{e.f()}}}},{key:"execute",value:(g=c(a.mark((function I(){var g,C,e,A,t,r,c,i,n,l,o=this;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:for(CI.tick=performance.now(),g=this._stack.filter((function(I){return 0===I.inputs.size})),C=[];g.length>0;)C.push(g.splice(0,8));e=0,A=C;case 5:if(!(e<A.length)){I.next=15;break}t=A[e],r=[],c=j(t);try{for(c.s();!(i=c.n()).done;)n=i.value,this.executeHelper(n),r.push(n.executionPromise)}catch(I){c.e(I)}finally{c.f()}return I.next=12,Promise.all(r);case 12:e++,I.next=5;break;case 15:return l=new Promise((function(I){Promise.all(o._stack.map((function(I){return I.executionPromise}))).then((function(){I()}))})),I.next=18,l;case 18:this.clear();case 19:case"end":return I.stop()}}),I,this)}))),function(){return g.apply(this,arguments)})},{key:"generateViz",value:function(){var I,g="",e="",A=j(this._paths);try{for(A.s();!(I=A.n()).done;){var t=C(I.value,2),r=t[0],c=t[1];g+="  ".concat(r.id," [label=<[").concat(r.id,"] ").concat(r.name).concat(r.subName?" ("+r.subName+")":"",'<BR /><FONT POINT-SIZE="10">wait: ').concat(r.timeWait.toFixed(4),", execute: ").concat(r.timeExecute.toFixed(4),'</FONT>>, style=filled, fillcolor="').concat(II(r.level),'"]\n');var i,n=j(c);try{for(n.s();!(i=n.n()).done;){var l=i.value;e+="  ".concat(r.id," -> ").concat(l.id,"\n")}}catch(I){n.e(I)}finally{n.f()}}}catch(I){A.e(I)}finally{A.f()}var o="digraph {\n".concat(g,"\n").concat(e,"}");console.log(o)}},{key:"clear",value:function(){this._paths.clear(),this._stack=[],CI.reset()}}]),I}(),CI=function(){function I(g,C,e){L(this,I),t(this,"id",void 0),t(this,"name",void 0),t(this,"subName",void 0),t(this,"visited",void 0),t(this,"numVisited",void 0),t(this,"executionPromise",void 0),t(this,"inputs",void 0),t(this,"inputsAddr",void 0),t(this,"output",void 0),t(this,"timeWait",0),t(this,"timeExecute",0),t(this,"level",0),t(this,"_fn",void 0),t(this,"_args",void 0),this.id=I.nodeId++,this.name=g,this.visited=!1,this.numVisited=0,this.inputs=new Set,this.inputsAddr=[],this.output=-1,this._fn=C,this._args=e}var g;return x(I,[{key:"runOnce",value:function(){var g=this;if(void 0===this.executionPromise){var C=O(this.inputs).map((function(I){return I.executionPromise}));this.executionPromise=Promise.all(C).then(c(a.mark((function C(){var e,A,t;return a.wrap((function(C){for(;;)switch(C.prev=C.next){case 0:return e=performance.now(),g.timeWait=(e-I.tick)/1e3,A=performance.now(),C.next=5,g._fn.apply(null,g._args);case 5:return t=C.sent,e=performance.now(),g.timeExecute=(e-A)/1e3,C.abrupt("return",t);case 9:case"end":return C.stop()}}),C)}))))}}},{key:"runFn",value:(g=c(a.mark((function I(){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return I.next=2,this._fn.apply(null,this._args);case 2:case"end":return I.stop()}}),I,this)}))),function(){return g.apply(this,arguments)})}],[{key:"reset",value:function(){I.nodeId=0}}]),I}();function eI(I,g){var C=Object.keys(I);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(I);g&&(e=e.filter((function(g){return Object.getOwnPropertyDescriptor(I,g).enumerable}))),C.push.apply(C,e)}return C}function AI(I){for(var g=1;g<arguments.length;g++){var C=null!=arguments[g]?arguments[g]:{};g%2?eI(Object(C),!0).forEach((function(g){t(I,g,C[g])})):Object.getOwnPropertyDescriptors?Object.defineProperties(I,Object.getOwnPropertyDescriptors(C)):eI(Object(C)).forEach((function(g){Object.defineProperty(I,g,Object.getOwnPropertyDescriptor(C,g))}))}return I}t(CI,"nodeId",0),t(CI,"executeWasmFn",void 0),t(CI,"tick",0);var tI,rI=function(){function I(g){var C=this;L(this,I),t(this,"worker",void 0),t(this,"listeners",{}),this.worker=g,this.worker.onmessage=function(I){switch(I.data.command){case"ok":I.data.workId in C.listeners&&(C.listeners[I.data.workId](I.data.result),C.removeListener(I.data.workId));break;case"failed":case"error":throw C.removeListener(I.data.workId),new Error(I.data.message);default:throw C.removeListener(I.data.workId),new Error("Unrecognized command: ".concat(I.data.command))}}}return x(I,[{key:"postMessage",value:function(I,g){this.worker.postMessage(I,g)}},{key:"terminate",value:function(){this.worker.terminate()}},{key:"addListener",value:function(I,g){this.listeners[I]=g}},{key:"removeListener",value:function(I){delete this.listeners[I]}}]),I}(),cI=function(I,g,C){var e=Math.ceil(1e10*(performance.now()+Math.random())),A=function(I,g){return new Promise((function(C){g.addListener(I,(function(I){C(I)}))}))}(e,I);return I.postMessage(AI(AI({},g),{},{workId:e}),C),A};!function(I){I[I.ATTENTION_PRECOMPUTE_ENCODING=200]="ATTENTION_PRECOMPUTE_ENCODING",I[I.ATTENTION_ATTEND_COMBINED=201]="ATTENTION_ATTEND_COMBINED"}(tI||(tI={}));var iI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},A=function(){var I=c(a.mark((function I(g,C,A,t,r,c){var i;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),C=v(C),c=v(c),i=D.getXpu(g)){I.next=7;break}return e(c,-1),I.abrupt("return");case 7:return I.next=9,cI(i.workers[0],{action:tI.ATTENTION_PRECOMPUTE_ENCODING,encodingAddress:C,dimension:A,steps:t,theta:r});case 9:e(c,0);case 10:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r){return I.apply(this,arguments)}}(),t=function(){var g=c(a.mark((function g(C,A,t,r,c,i,n,l,o,s,d,b,Z,m,u,G,B,y,V,W,h,R){var X,p,H,J,S,w,k;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=v(C),l=v(l),o=v(o),s=v(s),d=v(d),b=v(b),Z=v(Z),m=v(m),u=v(u),G=v(G),B=v(B),V=v(V),h=v(h),R=v(R),X=D.getXpu(C)){g.next=18;break}return e(R,-1),g.abrupt("return");case 18:return p=new Float32Array(I.buffer),H=W*A*c,J=p.slice(o/Float32Array.BYTES_PER_ELEMENT,o/Float32Array.BYTES_PER_ELEMENT+H),S=p.slice(s/Float32Array.BYTES_PER_ELEMENT,s/Float32Array.BYTES_PER_ELEMENT+H),w=p.slice(d/Float32Array.BYTES_PER_ELEMENT,d/Float32Array.BYTES_PER_ELEMENT+H),g.next=25,cI(X.workers[0],{action:tI.ATTENTION_ATTEND_COMBINED,numHeads:A,numKvHeads:t,windowLength:r,headDimension:c,ropeDimension:i,ropeInterleaved:n,newEncodingAddress:l,qBuffer:J,kBuffer:S,vBuffer:w,keysAddress:b,keyInterceptsAddress:Z,keySlopesAddress:m,valuesAddress:u,valueInterceptsAddress:G,valueSlopesAddress:B,position:y,queryAddress:V,n:W},[J.buffer,S.buffer,w.buffer]);case 25:k=g.sent,(p=new Float32Array(I.buffer)).set(k,h/Float32Array.BYTES_PER_ELEMENT);case 28:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c,i,n,l,o,s,d,a,b,Z,m,u,G,B,y,V){return g.apply(this,arguments)}}();return{pv_picollm_attention_precompute_encoding_web_worker_wasm:A,pv_picollm_attention_attend_combined_web_worker_wasm:g.graphify(t,[7,8,9,10,11,14,18,20],20)}};t(t({},tI.ATTENTION_PRECOMPUTE_ENCODING,(function(I){var g=I.globals,C=g.exports,e=g.memAlloc,A=I.encodingAddress,t=I.dimension,r=I.steps,c=I.theta;(0,C.pv_picollm_attention_precompute_encoding_wasm)(e.get(A).workerMemAddress,t,r,c)})),tI.ATTENTION_ATTEND_COMBINED,(function(I){var g=I.globals,C=g.exports,e=g.memAlloc,A=g.memory,t=I.numHeads,r=I.numKvHeads,c=I.windowLength,i=I.headDimension,n=I.ropeDimension,l=I.ropeInterleaved,o=I.newEncodingAddress,s=I.qBuffer,d=I.kBuffer,a=I.vBuffer,b=I.keysAddress,Z=I.keyInterceptsAddress,m=I.keySlopesAddress,u=I.valuesAddress,G=I.valueInterceptsAddress,B=I.valueSlopesAddress,y=I.position,V=I.queryAddress,W=I.n,h=C.aligned_alloc,R=C.free,X=C.pv_picollm_attention_encode_wasm,p=C.pv_picollm_attention_update_keys_wasm,H=C.pv_picollm_attention_update_values_wasm,J=C.pv_picollm_attention_transpose_query_wasm,S=C.pv_picollm_attention_attend_wasm,w=e.get(o).workerMemAddress,k=e.get(b).workerMemAddress,f=e.get(Z).workerMemAddress,F=e.get(m).workerMemAddress,v=e.get(u).workerMemAddress,Y=e.get(G).workerMemAddress,K=e.get(B).workerMemAddress,N=e.get(V).workerMemAddress,E=h(Float32Array.BYTES_PER_ELEMENT,s.length*Float32Array.BYTES_PER_ELEMENT),U=h(Float32Array.BYTES_PER_ELEMENT,d.length*Float32Array.BYTES_PER_ELEMENT),M=h(Float32Array.BYTES_PER_ELEMENT,a.length*Float32Array.BYTES_PER_ELEMENT),Q=t*i*W,T=h(Float32Array.BYTES_PER_ELEMENT,Q*Float32Array.BYTES_PER_ELEMENT),L=new Float32Array(A.buffer);L.set(s,E/Float32Array.BYTES_PER_ELEMENT),L.set(d,U/Float32Array.BYTES_PER_ELEMENT),L.set(a,M/Float32Array.BYTES_PER_ELEMENT),L.fill(0,T/Float32Array.BYTES_PER_ELEMENT,T/Float32Array.BYTES_PER_ELEMENT+Q),X(E,w,W,t,l,i,n,y),J(W,E,N,t,i),X(U,w,W,r,l,i,n,y),p(r,c,i,k,f,F,y,W,U),H(r,c,i,v,Y,K,y,W,M),S(t,r,c,i,k,f,F,v,Y,K,y,N,W,T);var z=(L=new Float32Array(A.buffer)).slice(T/Float32Array.BYTES_PER_ELEMENT,T/Float32Array.BYTES_PER_ELEMENT+Q);return R(E),R(U),R(M),R(T),z}));var nI,lI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},A=function(){var I=c(a.mark((function I(g,A,t,r){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),t=v(t),r=v(r),D.getXpu(g)){I.next=7;break}return e(r,-1),I.abrupt("return");case 7:return I.next=9,C.pv_picollm_feed_forward_silu_wasm(A,t);case 9:case"end":return I.stop()}}),I)})));return function(g,C,e,A){return I.apply(this,arguments)}}(),t=function(){var I=c(a.mark((function I(g,A,t,r){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),t=v(t),r=v(r),D.getXpu(g)){I.next=7;break}return e(r,-1),I.abrupt("return");case 7:return I.next=9,C.pv_picollm_feed_forward_gelu_wasm(A,t);case 9:case"end":return I.stop()}}),I)})));return function(g,C,e,A){return I.apply(this,arguments)}}(),r=function(){var I=c(a.mark((function I(g,e,A,t){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),A=v(A),D.getXpu(g)){I.next=6;break}return I.abrupt("return");case 6:return I.next=8,C.pv_picollm_feed_forward_almost_gelu_wasm(e,A);case 8:case"end":return I.stop()}}),I)})));return function(g,C,e,A){return I.apply(this,arguments)}}(),i=function(){var I=c(a.mark((function I(g,A,t,r,c){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),t=v(t),r=v(r),c=v(c),D.getXpu(g)){I.next=8;break}return e(c,-1),I.abrupt("return");case 8:return I.next=10,C.pv_picollm_feed_forward_multiply_buffers_wasm(A,t,r);case 10:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t){return I.apply(this,arguments)}}();return{pv_picollm_feed_forward_silu_web_worker_wasm:g.graphify(A,[2],2),pv_picollm_feed_forward_gelu_web_worker_wasm:g.graphify(t,[2],2),pv_picollm_feed_forward_almost_gelu_web_worker_wasm:g.graphify(r,[2],2),pv_picollm_feed_forward_multiply_buffers_web_worker_wasm:g.graphify(i,[2,3],3)}},oI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},A=function(){var I=c(a.mark((function I(g,A,t,r,c,i,n,l){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),c=v(c),i=v(i),n=v(n),l=v(l),D.getXpu(g)){I.next=9;break}return e(l,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_gate_forward_wasm(A,t,r,c,i,n);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i){return I.apply(this,arguments)}}();return{pv_picollm_gate_forward_web_worker_wasm:g.graphify(A,[],6)}},sI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},A=function(){var I=c(a.mark((function I(g,A,t,r,c){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),t=v(t),r=v(r),c=v(c),D.getXpu(g)){I.next=8;break}return e(c,-1),I.abrupt("return");case 8:return I.next=10,C.pv_picollm_moe_transformer_add_to_buffer_wasm(A,t,r);case 10:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t){return I.apply(this,arguments)}}(),t=function(){var I=c(a.mark((function I(g,A,t,r,c,i,n,l){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),c=v(c),i=v(i),n=v(n),l=v(l),D.getXpu(g)){I.next=9;break}return e(l,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_moe_transformer_multiply_weight_and_add_to_buffer_wasm(A,t,r,c,i,n);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i){return I.apply(this,arguments)}}(),r=function(){var I=c(a.mark((function I(g,A,t,r,c,i){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),t=v(t),r=v(r),c=v(c),i=v(i),D.getXpu(g)){I.next=9;break}return e(i,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_moe_transformer_add_buffers_wasm(A,t,r,c);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r){return I.apply(this,arguments)}}();return{pv_picollm_moe_transformer_add_to_buffer_web_worker_wasm:g.graphify(A,[2],3),pv_picollm_moe_transformer_multiply_weight_and_add_to_buffer_web_worker_wasm:g.graphify(t,[5],6),pv_picollm_moe_transformer_add_buffers_web_worker_wasm:g.graphify(r,[2,3],4)}},dI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},A=function(){var I=c(a.mark((function I(g,A,t,r,c,i,n,l,o,s){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),r=v(r),n=v(n),o=v(o),s=v(s),D.getXpu(g)){I.next=9;break}return e(s,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_norm_forward_wasm(A,t,r,c,n+i,o+l);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i,n,l){return I.apply(this,arguments)}}();return{pv_picollm_norm_forward_web_worker_wasm:g.graphify(A,[6],8)}},aI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},A=function(){var I=c(a.mark((function I(g,A,t,r,c,i,n,l,o,s,d){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),r=v(r),c=v(c),l=v(l),s=v(s),d=v(d),D.getXpu(g)){I.next=10;break}return e(d,-1),I.abrupt("return");case 10:return I.next=12,C.pv_picollm_norm_layer_forward_wasm(A,t,r,c,i,l+n,s+o);case 12:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i,n,l,o){return I.apply(this,arguments)}}();return{pv_picollm_norm_layer_forward_web_worker_wasm:g.graphify(A,[7,9],9)}},bI=function(I,g,C){var e=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},A=function(){var I=c(a.mark((function I(g,A,t,r,c){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),t=v(t),r=v(r),c=v(c),D.getXpu(g)){I.next=8;break}return e(c,-1),I.abrupt("return");case 8:return I.next=10,C.pv_picollm_transformer_add_to_buffer_wasm(A,t,r);case 10:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t){return I.apply(this,arguments)}}(),t=function(){var I=c(a.mark((function I(g,A,t,r,c,i){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),t=v(t),r=v(r),c=v(c),i=v(i),D.getXpu(g)){I.next=9;break}return e(i,-1),I.abrupt("return");case 9:return I.next=11,C.pv_picollm_transformer_add_buffers_wasm(A,t,r,c);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r){return I.apply(this,arguments)}}();return{pv_picollm_transformer_add_to_buffer_web_worker_wasm:g.graphify(A,[2,3],3),pv_picollm_transformer_add_buffers_web_worker_wasm:g.graphify(t,[2,3],4)}};function ZI(I,g){var C="undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(!C){if(Array.isArray(I)||(C=function(I,g){if(!I)return;if("string"==typeof I)return mI(I,g);var C=Object.prototype.toString.call(I).slice(8,-1);"Object"===C&&I.constructor&&(C=I.constructor.name);if("Map"===C||"Set"===C)return Array.from(I);if("Arguments"===C||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))return mI(I,g)}(I))||g&&I&&"number"==typeof I.length){C&&(I=C);var e=0,A=function(){};return{s:A,n:function(){return e>=I.length?{done:!0}:{done:!1,value:I[e++]}},e:function(I){throw I},f:A}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,r=!0,c=!1;return{s:function(){C=C.call(I)},n:function(){var I=C.next();return r=I.done,I},e:function(I){c=!0,t=I},f:function(){try{r||null==C.return||C.return()}finally{if(c)throw t}}}}function mI(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}function uI(I){return I|=I>>1,I|=I>>2,I|=I>>4,I|=I>>8,I|=I>>16,(I|=I>>32)-(I>>1)}function GI(I,g){var C=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;void 0===g&&(g=I,I=0);for(var e=[],A=I;C>0?A<g:A>g;A+=C)e.push(A);return e}!function(I){I[I.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BLOCKS=100]="WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BLOCKS",I[I.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_METAS=101]="WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_METAS",I[I.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BIAS=102]="WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BIAS",I[I.WEIGHT_BLOCK_MIXED_16X8_FORWARD_SINGLE=103]="WEIGHT_BLOCK_MIXED_16X8_FORWARD_SINGLE",I[I.WEIGHT_BLOCK_MIXED_16X8_FORWARD_MULTIPLE=104]="WEIGHT_BLOCK_MIXED_16X8_FORWARD_MULTIPLE"}(nI||(nI={}));var BI=function(I,g,e){var A=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},t=function(){var e=c(a.mark((function e(t,r,c,i,n,l,o,s,d,b,Z){var m,u,G,B,y,V,W,h,R,X,p,H,J,S,w,k,f,F,K,N,E,U,M,Q,T,L,z,x,_,P,j;return a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=v(t),r=v(r),c=v(c),n=v(n),l=v(l),d=v(d),b=v(b),Z=v(Z),m=D.getXpu(t)){e.next=12;break}return A(Z,-1),e.abrupt("return");case 12:for(u=new Uint8Array(I.buffer),G=Y(u,r),g.addName(d,G),B=new Int32Array(I.buffer),y=B.slice(c/Int32Array.BYTES_PER_ELEMENT,c/Int32Array.BYTES_PER_ELEMENT+2),V=B.slice(n/Int32Array.BYTES_PER_ELEMENT,n/Int32Array.BYTES_PER_ELEMENT+i),W=B.slice(l/Int32Array.BYTES_PER_ELEMENT,l/Int32Array.BYTES_PER_ELEMENT+i),h=new Uint8Array(I.buffer).slice(d,d+s),R=[],X=0,p=0;p<i;p++)H=p===i-1?y[1]/8:W[p+1],J=(H-W[p])*V[p]*y[0],R.push([X,J]),X+=J;S=[],m.numWorkers<4?(w=uI(m.numWorkers),S=GI(m.numWorkers-w,m.numWorkers)):(k=uI((m.numWorkers-1)*(2/3)),f=uI((m.numWorkers-1)*(1/3)),F=m.numWorkers-1-k-f,S=G.includes("ff")||s>1024e4?GI(1,1+k):GI(1+k,1+k+f),F>0&&G.includes("att.v")&&(F>=f?S=GI(1+k+f,1+k+2*f):f===F+1&&(S=[0].concat(O(GI(1+k+f,k+2*f)))))),K=Math.ceil(s/o/S.length)*o,N=s/K,y[0]/=N,E=[],U=s,M=0;case 31:if(!(M<S.length)){e.next=43;break}Q=new Uint8Array(K),T=0,L=ZI(R);try{for(L.s();!(z=L.n()).done;)x=C(z.value,2),_=x[0],P=x[1],j=M*(P/N),Q.set(h.slice(_+j,_+j+P/N),T),T+=P/N}catch(I){L.e(I)}finally{L.f()}if(U-=T,E.push(cI(m.workers[S[M]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BLOCKS,shape:y,bitDepths:V,bitDepthStarts:W,numBlockBytes:K,blocksAddress:b,block:Q},[Q.buffer])),!(U<=0)){e.next=40;break}return e.abrupt("break",43);case 40:M++,e.next=31;break;case 43:return e.next=45,Promise.all(E);case 45:A(Z,0),D.addMemory(b,{objAddress:t,memFlag:0,allocSize:s,chunkSize:K,workerSet:S});case 47:case"end":return e.stop()}}),e)})));return function(I,g,C,A,t,r,c,i,n,l,o){return e.apply(this,arguments)}}(),r=function(){var g=c(a.mark((function g(e,t,r,c,i,n,l,o,s,d){var b,Z,m,u,G,B,y,V,W,h,R,X,p,H,J,S,w,k,f,F,Y,K,N,E;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(e=v(e),t=v(t),c=v(c),i=v(i),o=v(o),s=v(s),d=v(d),b=D.getXpu(e)){g.next=11;break}return A(d,-1),g.abrupt("return");case 11:if(Z=D.getMemory(i)){g.next=15;break}return A(d,-1),g.abrupt("return");case 15:for(m=new Int32Array(I.buffer),u=m.slice(t/Int32Array.BYTES_PER_ELEMENT,t/Int32Array.BYTES_PER_ELEMENT+2),G=m.slice(c/Int32Array.BYTES_PER_ELEMENT,c/Int32Array.BYTES_PER_ELEMENT+r),B=new Uint16Array(I.buffer).slice(o/Uint16Array.BYTES_PER_ELEMENT,o/Uint16Array.BYTES_PER_ELEMENT+l),y=[],V=0,W=0;W<r;W++)h=W===r-1?u[1]/8:G[W+1],R=2*(h-G[W])*(u[0]/16),y.push([V,R]),V+=R;X=Math.ceil(l/n/Z.workerSet.length)*n,p=l/X,H=[],J=l,S=0;case 27:if(!(S<Z.workerSet.length)){g.next=39;break}w=new Uint16Array(X),k=0,f=ZI(y);try{for(f.s();!(F=f.n()).done;)Y=C(F.value,2),K=Y[0],N=Y[1],E=S*(N/p),w.set(B.slice(K+E,K+E+N/p),k),k+=N/p}catch(I){f.e(I)}finally{f.f()}if(J-=k,H.push(cI(b.workers[Z.workerSet[S]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_METAS,memAddress:s,metas:w},[w.buffer])),!(J<=0)){g.next=36;break}return g.abrupt("break",39);case 36:S++,g.next=27;break;case 39:A(d,0),D.addMemory(s,{objAddress:e,memFlag:0,allocSize:l*Uint16Array.BYTES_PER_ELEMENT,chunkSize:X,workerSet:Z.workerSet});case 41:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c,i,n,l){return g.apply(this,arguments)}}(),i=function(){var g=c(a.mark((function g(C,e,t,r,c,i,n){var l,o,s,d,b,Z,m,u,G,B,y;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=v(C),e=v(e),t=v(t),c=v(c),i=v(i),n=v(n),l=D.getXpu(C)){g.next=10;break}return A(n,-1),g.abrupt("return");case 10:if(o=D.getMemory(t)){g.next=14;break}return A(n,-1),g.abrupt("return");case 14:s=new Int32Array(I.buffer),d=s.slice(e/Int32Array.BYTES_PER_ELEMENT,e/Int32Array.BYTES_PER_ELEMENT+2),b=d[0],Z=new Float32Array(I.buffer).slice(c/Float32Array.BYTES_PER_ELEMENT,c/Float32Array.BYTES_PER_ELEMENT+b),m=Math.ceil(b/r/o.workerSet.length)*r,u=[],G=b,B=0;case 22:if(!(B<o.workerSet.length)){g.next=31;break}if(y=Z.slice(B*m,(B+1)*m),u.push(cI(l.workers[o.workerSet[B]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BIAS,memAddress:i,bias:y},[y.buffer])),!((G-=m)<=0)){g.next=28;break}return g.abrupt("break",31);case 28:B++,g.next=22;break;case 31:A(n,0),D.addMemory(i,{objAddress:C,memFlag:0,allocSize:b*Float32Array.BYTES_PER_ELEMENT,chunkSize:m,workerSet:o.workerSet});case 33:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c){return g.apply(this,arguments)}}(),n=function(){var g=c(a.mark((function g(C,e,t,r,c,i,n,l,o,s,d,b,Z,m,u){var G,B,y,V,W,h,R,X,p,H,J,S,w,k,f,F,Y;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=v(C),e=v(e),t=v(t),c=v(c),i=v(i),l=v(l),s=v(s),b=v(b),Z=v(Z),m=v(m),u=v(u),G=D.getXpu(C)){g.next=15;break}return A(u,-1),g.abrupt("return");case 15:if(B=D.getMemory(s)){g.next=19;break}return A(u,-1),g.abrupt("return");case 19:if(D.getMemory(l)){g.next=23;break}return A(u,-1),g.abrupt("return");case 23:if(y=D.getMemory(b)){g.next=27;break}return A(u,-1),g.abrupt("return");case 27:if(D.getMemory(Z)){g.next=31;break}return A(u,-1),g.abrupt("return");case 31:for(V=new Float32Array(I.buffer),W=new Int32Array(I.buffer),h=W.slice(e/Int32Array.BYTES_PER_ELEMENT,e/Int32Array.BYTES_PER_ELEMENT+2),R=W.slice(c/Int32Array.BYTES_PER_ELEMENT,c/Int32Array.BYTES_PER_ELEMENT+r),X=W.slice(i/Int32Array.BYTES_PER_ELEMENT,i/Int32Array.BYTES_PER_ELEMENT+r),p=V.slice(b/Float32Array.BYTES_PER_ELEMENT,(b+y.allocSize)/Float32Array.BYTES_PER_ELEMENT),H=B.chunkSize,J=o/H,h[0]/=J,S=[],w=0;w<B.workerSet.length;w++)S.push(cI(G.workers[B.workerSet[w]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_FORWARD_SINGLE,shape:h,indicesAddress:t,bitDepthStarts:R,bitDepths:X,numMetas:n,metasAddress:l,numBlockBytes:H,blocksAddress:s,xOffset:d,xAddress:b,xBuffer:p,biasAddress:m}));return g.next=44,Promise.all(S);case 44:for(k=g.sent,f=new Float32Array(h[0]*J),F=0;F<k.length;F++)Y=new Float32Array(k[F].buffer),f.set(Y,F*Y.length);V.set(f,Z/Float32Array.BYTES_PER_ELEMENT);case 48:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c,i,n,l,o,s,d,a,b){return g.apply(this,arguments)}}(),l=function(){var g=c(a.mark((function g(C,e,t,r,c,i,n,l,o,s,d,b,Z,m,u,G){var B,y,V,W,h,R,X,p,H,J,S,w,k,f,F,Y,K,N,E,U;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=v(C),e=v(e),t=v(t),c=v(c),i=v(i),l=v(l),s=v(s),Z=v(Z),m=v(m),u=v(u),G=v(G),B=D.getXpu(C)){g.next=15;break}return A(G,-1),g.abrupt("return");case 15:if(y=D.getMemory(s)){g.next=19;break}return A(G,-1),g.abrupt("return");case 19:if(D.getMemory(l)){g.next=23;break}return A(G,-1),g.abrupt("return");case 23:if(D.getMemory(m)){g.next=27;break}return A(G,-1),g.abrupt("return");case 27:if(V=D.getMemory(Z)){g.next=31;break}return A(G,-1),g.abrupt("return");case 31:for(W=new Float32Array(I.buffer),h=new Int32Array(I.buffer),R=h.slice(e/Int32Array.BYTES_PER_ELEMENT,e/Int32Array.BYTES_PER_ELEMENT+2),X=h.slice(c/Int32Array.BYTES_PER_ELEMENT,c/Int32Array.BYTES_PER_ELEMENT+r),p=h.slice(i/Int32Array.BYTES_PER_ELEMENT,i/Int32Array.BYTES_PER_ELEMENT+r),H=W.slice(Z/Float32Array.BYTES_PER_ELEMENT,(Z+V.allocSize)/Float32Array.BYTES_PER_ELEMENT),J=y.chunkSize,S=o/J,R[0]/=S,w=[],k=0;k<y.workerSet.length;k++)w.push(cI(B.workers[y.workerSet[k]],{action:nI.WEIGHT_BLOCK_MIXED_16X8_FORWARD_MULTIPLE,shape:R,indicesAddress:t,bitDepthStarts:X,bitDepths:p,numMetas:n,metasAddress:l,numBlockBytes:J,blocksAddress:s,n:d,xOffset:b,xAddress:Z,xBuffer:H,biasAddress:u}));return g.next=44,Promise.all(w);case 44:for(f=g.sent,F=new Float32Array(R[0]*S*d),Y=0,K=0;K<f.length;K++){for(N=new Float32Array(f[K].buffer),E=0,U=0;U<d;U++)F.set(N.slice(E,E+R[0]),E*S+Y),E+=R[0];Y+=R[0]}W.set(F,m/Float32Array.BYTES_PER_ELEMENT);case 49:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t,r,c,i,n,l,o,s,d,a,b,Z){return g.apply(this,arguments)}}(),o=function(){var I=c(a.mark((function I(g,C,t,r,c,i,n,l,o){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),c=v(c),n=v(n),l=v(l),o=v(o),D.getXpu(g)){I.next=9;break}return A(o,-1),I.abrupt("return");case 9:return I.next=11,e.pv_picollm_weight_float_forward_wasm(C,t,r,c,n+i,l);case 11:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c,i,n){return I.apply(this,arguments)}}();return{pv_picollm_weight_block_mixed_16x8_preprocess_blocks_web_worker_wasm:t,pv_picollm_weight_block_mixed_16x8_preprocess_metas_web_worker_wasm:r,pv_picollm_weight_block_mixed_16x8_preprocess_bias_web_worker_wasm:i,pv_picollm_weight_block_mixed_16x8_forward_single_web_worker_wasm:g.graphify(n,[11,12],12,9),pv_picollm_weight_block_mixed_16x8_forward_multiple_web_worker_wasm:g.graphify(l,[12,13],13,9),pv_picollm_weight_float_forward_web_worker_wasm:g.graphify(o,[6,7],7)}},yI=function(){var I=c(a.mark((function I(g){var C,e,A,t,r,c,i,n,l,o,s,d,b,Z,m,u,G,B,y;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:C=g.globals,e=C.exports,A=C.memAlloc,t=C.memory,r=g.shape,c=g.bitDepths,i=g.bitDepthStarts,n=g.numBlockBytes,l=g.blocksAddress,o=g.block,s=e.aligned_alloc,d=e.free,b=e.pv_picollm_weight_block_mixed_16x8_preprocess_blocks,(Z=s(Uint8Array.BYTES_PER_ELEMENT,n*Uint8Array.BYTES_PER_ELEMENT))&&(A.set(l,{allocSize:n,workerMemAddress:Z}),m=s(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*r.length),u=s(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*c.length),G=s(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*i.length),B=new Uint8Array(t.buffer),y=new Int32Array(t.buffer),B.set(o,Z),y.set(r,m/Int32Array.BYTES_PER_ELEMENT),y.set(c,u/Int32Array.BYTES_PER_ELEMENT),y.set(i,G/Int32Array.BYTES_PER_ELEMENT),b(m,c.length,u,G,Z),d(m),d(u),d(G));case 5:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),VI=function(){var I=c(a.mark((function I(g){var C,e,A,t,r,c,i,n,l,o,s,d,b,Z,m,u,G,B,y,V,W,h,R,X,p,H,J,S,w,k,f,F,v,Y,K;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.globals,e=C.exports,A=C.memAlloc,t=C.memory,r=g.shape,c=g.indicesAddress,i=g.bitDepthStarts,n=g.bitDepths,l=g.metasAddress,o=g.blocksAddress,s=g.xOffset,d=g.xBuffer,b=g.biasAddress,Z=e.aligned_alloc,m=e.free,u=e.pv_picollm_weight_block_mixed_16x8_forward_single,G=e.pv_picollm_weight_block_mixed_16x8_add_bias,B=A.get(c),y=B.workerMemAddress,V=A.get(l),W=V.workerMemAddress,h=A.get(o),R=h.workerMemAddress,X=Z(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*r.length),p=Z(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*i.length),H=Z(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*n.length),J=Z(256,Float32Array.BYTES_PER_ELEMENT*d.length),S=Z(256,Float32Array.BYTES_PER_ELEMENT*r[0]),w=new Float32Array(t.buffer),(k=new Int32Array(t.buffer)).set(r,X/Int32Array.BYTES_PER_ELEMENT),k.set(i,p/Int32Array.BYTES_PER_ELEMENT),k.set(n,H/Int32Array.BYTES_PER_ELEMENT),w.set(d,J/Float32Array.BYTES_PER_ELEMENT),u(X,y,n.length,p,H,W,R,J+s,S),A.has(b)&&(f=A.get(b),F=f.workerMemAddress,v=f.allocSize,Y=v/Float32Array.BYTES_PER_ELEMENT,G(1,Y,S,F)),K=new Float32Array(t.buffer).slice(S/Float32Array.BYTES_PER_ELEMENT,S/Float32Array.BYTES_PER_ELEMENT+r[0]),m(X),m(p),m(H),m(J),m(S),I.abrupt("return",K);case 26:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),WI=function(){var I=c(a.mark((function I(g){var C,e,A,t,r,c,i,n,l,o,s,d,b,Z,m,u,G,B,y,V,W,h,R,X,p,H,J,S,w,k,f,F,v,Y,K,N;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return C=g.globals,e=C.exports,A=C.memAlloc,t=C.memory,r=g.shape,c=g.indicesAddress,i=g.bitDepthStarts,n=g.bitDepths,l=g.metasAddress,o=g.blocksAddress,s=g.n,d=g.xOffset,b=g.xBuffer,Z=g.biasAddress,m=e.aligned_alloc,u=e.free,G=e.pv_picollm_weight_block_mixed_16x8_forward_multiple,B=e.pv_picollm_weight_block_mixed_16x8_add_bias,y=A.get(c),V=y.workerMemAddress,W=A.get(l),h=W.workerMemAddress,R=A.get(o),X=R.workerMemAddress,p=m(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*r.length),H=m(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*i.length),J=m(Int32Array.BYTES_PER_ELEMENT,Int32Array.BYTES_PER_ELEMENT*n.length),S=m(Float32Array.BYTES_PER_ELEMENT,Float32Array.BYTES_PER_ELEMENT*b.length),w=m(Float32Array.BYTES_PER_ELEMENT,Float32Array.BYTES_PER_ELEMENT*(r[0]*s)),k=new Float32Array(t.buffer),(f=new Int32Array(t.buffer)).set(r,p/Int32Array.BYTES_PER_ELEMENT),f.set(i,H/Int32Array.BYTES_PER_ELEMENT),f.set(n,J/Int32Array.BYTES_PER_ELEMENT),k.set(b,S/Float32Array.BYTES_PER_ELEMENT),G(p,V,n.length,H,J,h,X,s,S+d,w),A.has(Z)&&(F=A.get(Z),v=F.workerMemAddress,Y=F.allocSize,K=Y/Float32Array.BYTES_PER_ELEMENT,B(s,K,w,v)),N=new Float32Array(t.buffer).slice(w/Float32Array.BYTES_PER_ELEMENT,w/Float32Array.BYTES_PER_ELEMENT+r[0]*s),u(p),u(H),u(J),u(S),u(w),I.abrupt("return",N);case 26:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}();function hI(I,g){var C=Object.keys(I);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(I);g&&(e=e.filter((function(g){return Object.getOwnPropertyDescriptor(I,g).enumerable}))),C.push.apply(C,e)}return C}function RI(I,g){var C="undefined"!=typeof Symbol&&I[Symbol.iterator]||I["@@iterator"];if(!C){if(Array.isArray(I)||(C=function(I,g){if(!I)return;if("string"==typeof I)return XI(I,g);var C=Object.prototype.toString.call(I).slice(8,-1);"Object"===C&&I.constructor&&(C=I.constructor.name);if("Map"===C||"Set"===C)return Array.from(I);if("Arguments"===C||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(C))return XI(I,g)}(I))||g&&I&&"number"==typeof I.length){C&&(I=C);var e=0,A=function(){};return{s:A,n:function(){return e>=I.length?{done:!0}:{done:!1,value:I[e++]}},e:function(I){throw I},f:A}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var t,r=!0,c=!1;return{s:function(){C=C.call(I)},n:function(){var I=C.next();return r=I.done,I},e:function(I){c=!0,t=I},f:function(){try{r||null==C.return||C.return()}finally{if(c)throw t}}}}function XI(I,g){(null==g||g>I.length)&&(g=I.length);for(var C=0,e=new Array(g);C<g;C++)e[C]=I[C];return e}t(t(t(t(t({},nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BLOCKS,yI),nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_METAS,(function(I){var g=I.globals,C=g.exports,e=g.memAlloc,A=g.memory,t=I.memAddress,r=I.metas,c=(0,C.aligned_alloc)(Uint16Array.BYTES_PER_ELEMENT,r.length*Uint16Array.BYTES_PER_ELEMENT);c&&(e.set(t,{allocSize:r.length*Uint16Array.BYTES_PER_ELEMENT,workerMemAddress:c}),new Uint16Array(A.buffer).set(r,c/Uint16Array.BYTES_PER_ELEMENT))})),nI.WEIGHT_BLOCK_MIXED_16X8_PREPROCESS_BIAS,(function(I){var g=I.globals,C=g.exports,e=g.memAlloc,A=g.memory,t=I.memAddress,r=I.bias,c=(0,C.aligned_alloc)(Float32Array.BYTES_PER_ELEMENT,r.length*Float32Array.BYTES_PER_ELEMENT);c&&(e.set(t,{allocSize:r.length*Float32Array.BYTES_PER_ELEMENT,workerMemAddress:c}),new Float32Array(A.buffer).set(r,c/Float32Array.BYTES_PER_ELEMENT))})),nI.WEIGHT_BLOCK_MIXED_16X8_FORWARD_SINGLE,VI),nI.WEIGHT_BLOCK_MIXED_16X8_FORWARD_MULTIPLE,WI);var pI=function(I,g){var e=new gI;e.memory=I;for(var A=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},r=function(){var g=c(a.mark((function g(C,e,t,r,c){var i,n,l,o,s,d,b,Z,m,u,G,B,y;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:return C=v(C),e=v(e),t=v(t),r=v(r),c=v(c),i=h.aligned_alloc,n=p.getParser(navigator.userAgent),l=new Uint8Array(I.buffer),o=n.getBrowserName(),g.next=11,i(Uint8Array.BYTES_PER_ELEMENT,(o.length+1)*Uint8Array.BYTES_PER_ELEMENT);case 11:if(0!==(s=g.sent)){g.next=15;break}return A(c,-1),g.abrupt("return");case 15:for(A(C,s),d=0;d<o.length;d++)l[s+d]=o.charCodeAt(d);return l[s+o.length]=0,b=n.getBrowserVersion(),g.next=21,i(Uint8Array.BYTES_PER_ELEMENT,(b.length+1)*Uint8Array.BYTES_PER_ELEMENT);case 21:if(0!==(Z=g.sent)){g.next=25;break}return A(c,-1),g.abrupt("return");case 25:for(A(e,Z),m=0;m<b.length;m++)l[Z+m]=b.charCodeAt(m);return l[Z+b.length]=0,u=n.getOSName(),g.next=31,i(Uint8Array.BYTES_PER_ELEMENT,(u.length+1)*Uint8Array.BYTES_PER_ELEMENT);case 31:if(0!==(G=g.sent)){g.next=35;break}return A(c,-1),g.abrupt("return");case 35:for(A(t,G),B=0;B<u.length;B++)l[G+B]=u.charCodeAt(B);l[G+u.length]=0,y=self.navigator.hardwareConcurrency,A(r,y||1),A(c,0);case 41:case"end":return g.stop()}}),g)})));return function(I,C,e,A,t){return g.apply(this,arguments)}}(),i=function(){var I=c(a.mark((function I(C,t,r){var c,i,n,l,o;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(C=v(C),r=v(r),g){I.next=5;break}return A(r,-1),I.abrupt("return");case 5:0===t&&(t=8),c=self.navigator.hardwareConcurrency,i=c&&c<t?c:t,n=[],l=0;case 10:if(!(l<i)){I.next=18;break}return o=new rI(new T),n.push(o),I.next=15,cI(o,{action:Q.INIT,wasm:g});case 15:l++,I.next=10;break;case 18:if(!h.pv_picollm_feed_forward_almost_gelu_init_lookup_table){I.next=21;break}return I.next=21,h.pv_picollm_feed_forward_almost_gelu_init_lookup_table();case 21:D.addXpu(C,{deviceMem:new Set,numWorkers:i,workers:n,graph:e}),A(r,0);case 23:case"end":return I.stop()}}),I)})));return function(g,C,e){return I.apply(this,arguments)}}(),n=function(){var I=c(a.mark((function I(g,C,t,r,c,i){var n,l,o,s,d,b,Z,m,u;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),C=v(C),i=v(i),n=D.getXpu(g)){I.next=7;break}return A(i,-1),I.abrupt("return");case 7:if(l=n.workers,o=n.numWorkers,s=t,!Boolean(4&c)){I.next=40;break}if(d=[],!Boolean(8&c)){I.next=17;break}d.push(cI(l[0],{action:Q.ALLOC,size:t,memAddress:C})),I.next=38;break;case 17:if(b=Boolean(2&c),Z=0===r?o:r,b||t%Z==0){I.next=23;break}return A(i,-1),console.error("Failed to allocate memory: alloc size ".concat(t," must be divisible by batch ").concat(Z,".")),I.abrupt("return");case 23:s=Math.ceil(t/Z/n.numWorkers)*Z,m=t,u=0;case 26:if(!(u<n.numWorkers)){I.next=38;break}if(!b){I.next=31;break}d.push(cI(l[u],{action:Q.ALLOC,size:t,memAddress:C})),I.next=35;break;case 31:if(d.push(cI(l[u],{action:Q.ALLOC,size:Math.min(m,s),memAddress:C})),!((m-=s)<=0)){I.next=35;break}return I.abrupt("break",38);case 35:u++,I.next=26;break;case 38:return I.next=40,Promise.all(d);case 40:D.addMemory(C,{objAddress:g,memFlag:c,allocSize:t,chunkSize:s}),e.enabled||A(i,0);case 42:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r){return I.apply(this,arguments)}}(),l=function(){var I=c(a.mark((function I(g){var C,e,A,t,r,c;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),!D.hasMemory(g)){I.next=16;break}if(C=D.getMemory(g),e=C.objAddress,A=C.memFlag,t=D.getXpu(e),Boolean(4&A)){I.next=10;break}return I.next=8,h.free(g);case 8:I.next=14;break;case 10:for(r=[],c=0;c<t.numWorkers;c++)r.push(cI(t.workers[c],{action:Q.FREE,memAddress:g}));return I.next=14,Promise.all(r);case 14:D.removeMemory(g),D.removeUniquePointer(g);case 16:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),o=function(){var g=c(a.mark((function g(C,e,A,t){var r,c,i,n,l,o,s,d,b,Z,m,u,G,B,y;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=v(C),e=v(e),r=D.getMemory(C)){g.next=5;break}return g.abrupt("return");case 5:if(c=r.objAddress,i=r.memFlag,n=r.chunkSize,l=D.getXpu(c),Boolean(4&i)){g.next=13;break}(o=new Uint8Array(I.buffer)).set(o.slice(e,e+t),C+A),g.next=38;break;case 13:if(s=[],d=new Uint8Array(I.buffer).slice(e,e+t),!Boolean(8&i)){g.next=20;break}s.push(cI(l.workers[0],{action:Q.COPY_TO_XPU,memAddress:C,offset:A,buffer:d})),g.next=36;break;case 20:b=Boolean(2&i),Z=t,m=0;case 23:if(!(m<l.numWorkers)){g.next=36;break}if(!b){g.next=28;break}s.push(cI(l.workers[m],{action:Q.COPY_TO_XPU,memAddress:C,offset:A,buffer:d})),g.next=33;break;case 28:if(u=m*n,A<(m+1)*n&&(B=n-(G=A>u?A-u:0),y=t-Z,s.push(cI(l.workers[m],{action:Q.COPY_TO_XPU,memAddress:C,offset:G,buffer:d.slice(y,y+B)})),Z-=B),!(Z<=0)){g.next=33;break}return g.abrupt("break",36);case 33:m++,g.next=23;break;case 36:return g.next=38,Promise.all(s);case 38:case"end":return g.stop()}}),g)})));return function(I,C,e,A){return g.apply(this,arguments)}}(),s=function(){var g=c(a.mark((function g(C,e,A,t){var r,c,i,n,l,o,s,d,b,Z,m,u,G,B,y,V,W,h,R,X;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=v(C),e=v(e),r=D.getMemory(C)){g.next=5;break}return g.abrupt("return");case 5:if(c=r.objAddress,i=r.allocSize,n=r.memFlag,l=r.chunkSize,o=D.getXpu(c),Boolean(4&n)){g.next=13;break}(s=new Uint8Array(I.buffer)).set(s.slice(C+A,C+A+t),e),g.next=49;break;case 13:if(d=[],b=Boolean(2&n),Z=Boolean(8&n),!b&&!Z){g.next=20;break}d.push(cI(o.workers[0],{action:Q.COPY_FROM_XPU,memAddress:C,offset:A,size:i})),g.next=31;break;case 20:m=i,u=0;case 22:if(!(u<o.numWorkers)){g.next=31;break}if(G=u*l,A<(u+1)*l&&(B=A>G?A-G:0,y=Math.min(m,l-B),d.push(cI(o.workers[u],{action:Q.COPY_FROM_XPU,memAddress:C,offset:B,size:y})),m-=y),0!==m){g.next=28;break}return g.abrupt("break",31);case 28:u++,g.next=22;break;case 31:return g.next=33,Promise.all(d);case 33:V=g.sent,W=new Uint8Array(I.buffer),h=0,R=0;case 37:if(!(R<V.length)){g.next=49;break}if(X=V[R],!(h+X.length>t)){g.next=44;break}return W.set(X.slice(0,t-h),e+h),g.abrupt("break",49);case 44:W.set(X,e+h),h+=X.length;case 46:R++,g.next=37;break;case 49:case"end":return g.stop()}}),g)})));return function(I,C,e,A){return g.apply(this,arguments)}}(),d=function(){var g=c(a.mark((function g(C,e,A){var t,r,c,i,n,l,o,s,d,b;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:if(C=v(C),t=D.getMemory(C)){g.next=4;break}return g.abrupt("return");case 4:if(r=t.objAddress,c=t.allocSize,i=t.memFlag,n=t.chunkSize,l=D.getXpu(r),Boolean(4&i)){g.next=12;break}new Uint8Array(I.buffer).fill(e,C,C+A),g.next=35;break;case 12:if(o=[],!Boolean(8&i)){g.next=18;break}o.push(cI(l.workers[0],{action:Q.MEMSET,memAddress:C,fillByte:e,size:c})),g.next=33;break;case 18:s=Boolean(2&i),d=A,b=0;case 21:if(!(b<l.numWorkers)){g.next=33;break}if(!s){g.next=26;break}o.push(cI(l.workers[b],{action:Q.MEMSET,memAddress:C,fillByte:e,size:c})),g.next=30;break;case 26:if(o.push(cI(l.workers[b],{action:Q.MEMSET,memAddress:C,fillByte:e,size:Math.min(d,n)})),!((d-=n)<=0)){g.next=30;break}return g.abrupt("break",33);case 30:b++,g.next=21;break;case 33:return g.next=35,Promise.all(o);case 35:case"end":return g.stop()}}),g)})));return function(I,C,e){return g.apply(this,arguments)}}(),b=function(){var I=c(a.mark((function I(g){var C;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:g=v(g),C=self.navigator.hardwareConcurrency,A(g,C||1);case 3:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),Z=function(){var I=c(a.mark((function I(g){var C,e,A;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),C=D.getXpu(g)){I.next=4;break}return I.abrupt("return");case 4:for(e=[],A=0;A<C.numWorkers;A++)e.push(cI(C.workers[A],{action:Q.TIMER_START,workerIndex:A}));return I.next=8,Promise.all(e);case 8:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),m=function(){var I=c(a.mark((function I(g){var C,e,A;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),C=D.getXpu(g)){I.next=4;break}return I.abrupt("return");case 4:for(e=[],A=0;A<C.numWorkers;A++)e.push(cI(C.workers[A],{action:Q.TIMER_STOP}));return I.next=8,Promise.all(e);case 8:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),u=function(){var I=c(a.mark((function I(g){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),D.getXpu(g)){I.next=4;break}return I.abrupt("return");case 4:e.enabled=!0;case 5:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),G=function(){var I=c(a.mark((function I(g){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),D.getXpu(g)){I.next=4;break}return I.abrupt("return");case 4:e.enabled=!1;case 5:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),B=function(){var I=c(a.mark((function I(g,C){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(g=v(g),D.getXpu(g)){I.next=5;break}return A(C,-1),I.abrupt("return");case 5:return I.prev=5,I.next=8,e.execute();case 8:A(C,0),I.next=14;break;case 11:I.prev=11,I.t0=I.catch(5),A(C,-1);case 14:case"end":return I.stop()}}),I,null,[[5,11]])})));return function(g,C){return I.apply(this,arguments)}}(),y=function(){var g=c(a.mark((function g(C,e,A){var t;return a.wrap((function(g){for(;;)switch(g.prev=g.next){case 0:return A=v(A),g.next=3,h.aligned_alloc(C,e);case 3:t=g.sent,new Int32Array(I.buffer)[A/Int32Array.BYTES_PER_ELEMENT]=t;case 6:case"end":return g.stop()}}),g)})));return function(I,C,e){return g.apply(this,arguments)}}(),V=function(){var I=c(a.mark((function I(g){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return I.next=2,h.free(g);case 2:case"end":return I.stop()}}),I)})));return function(g){return I.apply(this,arguments)}}(),W=function(){var I=c(a.mark((function I(g,C,e,A){return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return I.next=2,h.pv_picollm_table_forward(g,C,e,A);case 2:case"end":return I.stop()}}),I)})));return function(g,C,e,A){return I.apply(this,arguments)}}(),h=function(I){for(var g=1;g<arguments.length;g++){var C=null!=arguments[g]?arguments[g]:{};g%2?hI(Object(C),!0).forEach((function(g){t(I,g,C[g])})):Object.getOwnPropertyDescriptors?Object.defineProperties(I,Object.getOwnPropertyDescriptors(C)):hI(Object(C)).forEach((function(g){Object.defineProperty(I,g,Object.getOwnPropertyDescriptor(C,g))}))}return I}({aligned_alloc:function(I,g){throw new Error("aligned_alloc was not passed in from parent module")},free:function(I){throw new Error("free was not passed in from parent module")},pv_picollm_table_forward:function(I,g,C,e){throw new Error("pv_picollm_table_forward was not passed in from parent module")},pv_picollm_feed_forward_almost_gelu_init_lookup_table:void 0,pv_xpu_graphified_alloc_wasm:e.graphify(y,[2],2,void 0,1),pv_xpu_graphified_free_wasm:e.graphify(V,[0],0,void 0,1),pv_xpu_web_worker_device_info_wasm:r,pv_xpu_web_worker_device_init_wasm:i,pv_xpu_web_worker_device_cleanup_wasm:function(I){I=v(I);var g=D.getXpu(I);if(g){var C,e=RI(g.workers);try{for(e.s();!(C=e.n()).done;){C.value.terminate()}}catch(I){e.e(I)}finally{e.f()}D.removeXpu(I)}},pv_xpu_web_worker_device_get_unique_pointer_wasm:function(){return D.getUniquePointer()},pv_xpu_web_worker_device_mem_alloc_wasm:e.graphify(n,[1],1),pv_xpu_web_worker_device_mem_free_wasm:e.graphify(l,[0],0,void 0,void 0),pv_xpu_web_worker_device_mem_copy_to_xpu_wasm:e.graphify(o,[0,1],0,void 0,void 0),pv_xpu_web_worker_device_mem_copy_from_xpu_wasm:e.graphify(s,[0,1],-1,void 0,void 0),pv_xpu_web_worker_device_mem_memset_wasm:e.graphify(d,[0],0,void 0,void 0),pv_xpu_web_worker_get_max_workers_wasm:b,pv_xpu_web_worker_timer_start_wasm:Z,pv_xpu_web_worker_timer_stop_wasm:m,pv_xpu_web_worker_start_graph_wasm:u,pv_xpu_web_worker_stop_graph_wasm:G,pv_xpu_web_worker_execute_graph_wasm:B,pv_xpu_web_worker_picollm_table_forward_wasm:e.graphify(W,[2,3],3,void 0,void 0)},function(I){var g=function(g,C){new Int32Array(I.buffer)[g/Int32Array.BYTES_PER_ELEMENT]=C},C=function(){var I=c(a.mark((function I(C,e,A,t,r,c,i){var n,l,o,s,d,b,Z,m,u,G,B;return a.wrap((function(I){for(;;)switch(I.prev=I.next){case 0:if(n=D.getXpu(C)){I.next=4;break}return g(i,-1),I.abrupt("return");case 4:if(l=D.getMemory(e)){I.next=8;break}return g(i,-1),I.abrupt("return");case 8:o=n.numWorkers,s=l.chunkSize/(r/2),d=t,b=[],Z=0;case 13:if(!(Z<o)){I.next=21;break}if(b.push(cI(n.workers[Z],{action:Q.MATRIX_VECTOR_MULTIPLY,matrixAddress:e,vectorAddress:A,m:Math.min(d,s),n:r,resultAddress:c})),!((d-=s)<=0)){I.next=18;break}return I.abrupt("break",21);case 18:Z++,I.next=13;break;case 21:return m=new Float32Array(r),I.next=24,Promise.all(b);case 24:for(u=I.sent,G=0;G<u.length;G++)u[G].length>0&&m.set(u[G],G*s);for(b=[],B=0;B<o;B++)b.push(cI(n.workers[B],{action:Q.SYNC_VECTOR,vectorAddress:c,buffer:m}));return I.next=30,Promise.all(b);case 30:case"end":return I.stop()}}),I)})));return function(g,C,e,A,t,r,c){return I.apply(this,arguments)}}();return{pv_matrix_vector_multiply_web_worker_wasm:C}}(I)),R=0,X=[iI,lI,oI,sI,dI,aI,bI,BI];R<X.length;R++)for(var H=X[R],J=0,S=Object.entries(H(I,e,h));J<S.length;J++){var w=C(S[J],2),k=w[0],f=w[1];h[k]=f}return h};export{pI as default};
